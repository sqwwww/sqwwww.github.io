<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sqw workplace</title>
  
  
  <link href="https://sqwwww.github.io/atom.xml" rel="self"/>
  
  <link href="https://sqwwww.github.io/"/>
  <updated>2022-07-23T14:28:15.486Z</updated>
  <id>https://sqwwww.github.io/</id>
  
  <author>
    <name>sqw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://sqwwww.github.io/wiki/RNA%E6%B5%81%E7%A8%8B/"/>
    <id>https://sqwwww.github.io/wiki/RNA%E6%B5%81%E7%A8%8B/</id>
    <published>2022-09-03T02:52:42.023Z</published>
    <updated>2022-07-23T14:28:15.486Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://sqwwww.github.io/wiki/biosoft/gatk_snp%E6%B5%81%E7%A8%8B/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/gatk_snp%E6%B5%81%E7%A8%8B/</id>
    <published>2022-09-03T02:52:42.019Z</published>
    <updated>2022-08-21T08:56:56.764Z</updated>
    
    <content type="html"><![CDATA[<p>gatk_snp流程.md</p><p>gatk官方博文，描述 gatk4和之前版本的差异 <a href="http://broad.io/GATK4-1">http://broad.io/GATK4-1</a><br>一些terra上的实例：<a href="https://terra.bio/#library/showcase">https://terra.bio/#library/showcase</a></p><p>数据预处理：<br>map<br>    bam文件中会包含read group的信息，在之后的分析中要用到<br>mark duplicates<br>recalibrate base quality score（BQSR）：对machine error（包含pcr error和测序error）重新校准<br>analysis-ready bam</p><p>多样本可以做joint calling<br>    对每个样本单独call snp，得到 gvcf（包含基因组上所有位点的信息）<br>    用所有样本的gvcf 做一个 joint calling，筛选出至少一个样本中存在变异的位点</p><p>建立索引<br>nohup ~&#x2F;biosoft&#x2F;gatk-4.1.9.0&#x2F;gatk CreateSequenceDictionary -R subelongatus.fa -O gatk.dict &amp;&gt; gatkIndex.log &amp;</p><p>gatk必须要sam&#x2F;bam文件的头文件信息（reads group），其中ID，PL和SM信息是必须要的<br>若是忘记添加read group信息还以通过 AddOrReplaceReadGroups 添加<br>GATK 要求read group的格式<br>ID &#x3D; Read group identifier<br>　　每一个read group 独有的ID，每一对reads 均有一个独特的ID，可以自定义命名；<br>PL &#x3D; Platform<br>　　测序平台；ILLUMINA, SOLID, LS454, HELICOS and PACBIO，不区分大小写；<br>SM &#x3D; sample<br>　　reads属于的样品名；SM要设定正确，因为GATK产生的VCF文件也使用这个名字;<br>LB &#x3D; DNA preparation library identifier<br>　　对一个read group的reads进行重复序列标记时，需要使用LB来区分reads来自那条lane;有时候，同一个库可能在不同的lane上完成测序;为了加以区分，<br>　　同一个或不同库只要是在不同的lane产生的reads都要单独给一个ID. 一般无特殊说明，成对儿read属于同一库，可自定义，比如：library1</p><p>gatk AddOrReplaceReadGroups -I .bam -O .add.bam -LB library1 -PL illumina -PU pl1 -SM name</p><p>byLongxin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ref=Mhap1</span><br><span class="line">refFa=ref/$&#123;ref&#125;.fasta</span><br><span class="line">sample=male</span><br><span class="line"></span><br><span class="line">samtools faidx $refFa</span><br><span class="line">gatk CreateSequenceDictionary -R=$refFa -O=ChrAsm.dict</span><br><span class="line">gatk MarkDuplicates -I=$sample.$ref.sorted.bam -O=$sample.$ref.dedup.bam -M=$sample.$ref.m</span><br><span class="line">samtools index $sample.$ref.dedup.bam</span><br><span class="line">gatk AddOrReplaceReadGroups -I=$sample.$ref.dedup.bam -O=$sample.$ref.dedup.bam.rg.bam RGID=4$sample RGLB=lib$sample RGPU=unit1 RGSM=$sample RGPL=illumina</span><br><span class="line"></span><br><span class="line">samtools index $sample.$ref.dedup.bam.rg.bam</span><br><span class="line"></span><br><span class="line">#java -Xmx83g  -jar GenomeAnalysisTK.jar -T HaplotypeCaller -R $refFa -I $sample.$ref.dedup.bam.rg.bam --emitRefConfidence GVCF -o $sample.$ref.dedup.bam.rg.bam.g.vcf.gz -nct 12</span><br><span class="line"></span><br><span class="line">gatk --java-options &quot;-Xmx83G&quot; HaplotypeCaller -R $refFa -I $sample.$ref.dedup.bam.rg.bam --emitRefConfidence GVCF -o $sample.$ref.dedup.bam.rg.bam.g.vcf.gz -nct 12</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;gatk_snp流程.md&lt;/p&gt;
&lt;p&gt;gatk官方博文，描述 gatk4和之前版本的差异 &lt;a href=&quot;http://broad.io/GATK4-1&quot;&gt;http://broad.io/GATK4-1&lt;/a&gt;&lt;br&gt;一些terra上的实例：&lt;a href=&quot;http</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://sqwwww.github.io/wiki/biosoft/DNA%E6%AF%94%E5%AF%B9%E6%B5%81%E7%A8%8B/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/DNA%E6%AF%94%E5%AF%B9%E6%B5%81%E7%A8%8B/</id>
    <published>2022-09-03T02:52:42.018Z</published>
    <updated>2022-07-21T05:00:27.313Z</updated>
    
    <content type="html"><![CDATA[<p>用来 call coverage 和 snp 的流程，从reads到结果图</p><p>ref&#x3D;ref&#x2F;bowtie2Index&#x2F;sub<br>threads&#x3D;20<br>cat fq_list|while read id; do</p><pre><code>arr=($id)fq1=$&#123;arr[0]&#125;fq2=$&#123;arr[1]&#125;sample=`basename $fq1 _1.fq.gz`echo $&#123;sample&#125;--------------------------fastp -i $fq1\-I $fq2\-o fq/$&#123;sample&#125;_clean_1.fastq.gz \-O fq/$&#123;sample&#125;_clean_2.fastq.gz \--thread=$threadsbowtie2 -p $&#123;threads&#125; \-x $&#123;ref&#125; \-1 fq/$&#123;sample&#125;_clean_1.fastq.gz \-2 fq/$&#123;sample&#125;_clean_2.fastq.gz \-S $&#123;sample&#125;.samgrep -P &#39;@|AS:&#39; $&#123;sample&#125;.sam | grep -v &quot;XS:i&quot; &gt; $&#123;sample&#125;.uniq.samsamtools view -@ 10 -bS  $&#123;sample&#125;.uniq.sam | samtools sort  -o $&#123;sample&#125;.uniq.bamsamtools index $&#123;sample&#125;.uniq.bam</code></pre><p>done</p><p>sexfindR的流程</p><p>call coverage 用到了 difcover，依赖到bioconductor-dnacopy，安装在 chipseq-py36下了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(chipseq-py36) qianwei ~/project/seahorse/published/assembly/map</span><br><span class="line">$conda install -c bioconda bioconductor-dnacopy</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;用来 call coverage 和 snp 的流程，从reads到结果图&lt;/p&gt;
&lt;p&gt;ref&amp;#x3D;ref&amp;#x2F;bowtie2Index&amp;#x2F;sub&lt;br&gt;threads&amp;#x3D;20&lt;br&gt;cat fq_list|while read id; do&lt;</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sqwwww.github.io/wiki/2/hello-world/"/>
    <id>https://sqwwww.github.io/wiki/2/hello-world/</id>
    <published>2022-09-03T02:52:42.017Z</published>
    <updated>2022-07-15T04:43:55.097Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="2" scheme="https://sqwwww.github.io/categories/2/"/>
    
    
  </entry>
  
  <entry>
    <title>bwa</title>
    <link href="https://sqwwww.github.io/wiki/bwa/"/>
    <id>https://sqwwww.github.io/wiki/bwa/</id>
    <published>2022-08-13T05:43:13.000Z</published>
    <updated>2022-08-13T15:26:22.832Z</updated>
    
    <content type="html"><![CDATA[<p>bwa index [ –p prefix ] &lt;in.db.fasta&gt;</p><p>bwa mem -t 25 $genome $read1 $read2  |  samtools sort -@ 10 -m 3G -O BAM -o $genome.$sample.sorted.bam  -</p><p>samtools index $genome.$sample.sorted.bam</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;bwa index [ –p prefix ] &amp;lt;in.db.fasta&amp;gt;&lt;/p&gt;
&lt;p&gt;bwa mem -t 25 $genome $read1 $read2  |  samtools sort -@ 10 -m 3G -O BAM -o $genome.$s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>genoPlotR</title>
    <link href="https://sqwwww.github.io/wiki/genoPlotR/"/>
    <id>https://sqwwww.github.io/wiki/genoPlotR/</id>
    <published>2022-08-12T08:17:54.000Z</published>
    <updated>2022-08-12T14:32:35.284Z</updated>
    
    <content type="html"><![CDATA[<p>genoPlotR是用来展示基因组结构的R包</p><p>基础的结构绘制</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;genoPlotR是用来展示基因组结构的R包&lt;/p&gt;
&lt;p&gt;基础的结构绘制&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>lipidDroplet</title>
    <link href="https://sqwwww.github.io/wiki/lipidDroplet/"/>
    <id>https://sqwwww.github.io/wiki/lipidDroplet/</id>
    <published>2022-08-08T03:16:50.000Z</published>
    <updated>2022-08-09T10:25:06.943Z</updated>
    
    <content type="html"><![CDATA[<p>lipid droplet biology</p><p>lipid是什么<br>最主要的能量储存形式<br>以甘油三酯（最主要），兹醇酯，蜡酯等形式存储<br>用作能量储存的优点：能量密度高；高度还原，可用于氧化；存储过程不需要水的参与</p><p>lipid droplet是什么<br>是一种存储油脂的细胞器，磷脂单分子层外膜，中间包裹着中性的脂质核心，脂质核心中通常含有甘油三酯（最主要），兹醇酯，蜡酯等；磷脂单分子层外膜通常被蛋白修饰，这些蛋白一般会参加脂质的代谢过程</p><p>lipid droplet 与细胞质<br>脂滴在细胞质中以小液滴的形式存在，形成乳浊液，连续相是胞浆，分散相是脂滴。</p><p>lipid droplet 在多细胞动物中的分布<br>ubiquitous，在人中，几乎所有细胞都能合成脂滴；但是脂质的存储主要在脂肪组织（adipose tissue）中。</p><p>脂滴的分泌<br>乳腺上皮细胞分泌牛奶（牛奶含有大量脂肪），就存在大量的脂滴分泌过程</p><p>脂滴的合成<br>脂滴合成通路<br>    合成甘油三酯: DGAT（ER表面），合成的甘油三酯被输送到ER的磷脂双分子层中间的空腔<br>    脂滴在ER上合成的起始阶段: seipin（ER表面）,LPAF1(ER表面，脂滴表面)，合成的甘油三酯在ER特定位置堆积，靠近胞质的磷脂层隆起，出芽，直至脂滴与内质网分离，LPAF1在这一过程中也从内质网表面进入到脂滴表面。<br>    脂滴与ER分离，并招募表面蛋白：两种途径，从细胞质中招募；从内质网上招募（GPAT4）<br>    脂滴进一步生长成熟</p><p>perlin 蛋白：<br>    合成于游离核糖体<br>    mammal中含有5种perilipin蛋白，Perilipins 2 and 3在所有组织中都表达，145具有组织特异性。teleost中含有4种perilipin蛋白，其中perilipin6是teleost特有的。皮肤黄色素细胞（xanthophores）中含有包裹类胡萝卜素的脂滴，perilipin6就集中在这一类脂滴上，促进相关色素的聚集和浓度提高，与鱼的体色相关。哺乳动物中包裹视黄醇（维生素A，可以由胡萝卜素转变而成）的脂滴表面富集perilipin2和3。<br>    鱼类具备6种起源于神经嵴（Neural crest）的色素细胞，分别为黑色素细胞（Melanophores）、黄色素细胞（Xanthophores）、红色素细胞（Erythrophores）、彩虹细胞（Iridophores），白色素细胞（Leucophores）和蓝色素细胞（Cyanophores）。哺乳类和鸟类仅含有1种神经嵴起源的色素细胞类型，即黑素细胞（Melanocytes）。鱼类色素细胞主要存在于表皮的真皮中，其中黑色素细胞、黄色素细胞、红色素细胞和蓝色素细胞含有相应的色素物质。<br>    所有硬骨鱼类的色素细胞均起源于胚胎时期外胚层的神经嵴细胞群，由一小组神经嵴细胞群首先形成色素母细胞（Chromatoblasts），随着发育的进行，再分化为黑色素细胞、黄色素细胞和彩虹色素细胞等其他色素细胞，在色素细胞到达一定的数量，开始色素模式的形成，也就是我们看到的成体鱼类所具有的典型的条纹和色素斑点。</p><pre><code>plin6在斑马鱼的胚胎发育时期可以检测到表达，在成年个体的皮肤上高表达正常情况下，未磷酸化的perilipin蛋白包裹在脂滴表面，阻碍脂质降解蛋白接触到脂滴内的脂质，从而使脂滴的的脂质可以存储下来；当perilipin蛋白处于激发态的时候（被PKA磷酸化），HSL（脂肪酶）与磷酸化的perilipin共定位于脂滴表面，HSL更容易接触到脂滴内的脂质，从而发挥脂解作用。HSL是水解甘油三酯的脂肪酶，非活化状态的HSL存在于细胞质中</code></pre><p>脂质如何通过胎盘<br>    正常情况下脂质很难通过胎盘，甘油三脂不能通过扩散进入细胞，但可以以两种方式进入胎盘，为胎儿提供营养<br>        1. 脂质与蛋白结合形成脂蛋白，胎盘上有脂蛋白的受体，可以把脂蛋白转运进胎盘。<br>        2. 脂肪酸可以通过自由扩散进入胎盘，这就需要母体有比较高的脂肪酸浓度。</p><p>特殊情况：乳腺上皮可以分泌脂滴</p><p>lipoprotein脂蛋白和lipid droplet脂滴是一个东西吗<br>    不是，二者结构上比较相似，都是由中性脂质内核和磷脂单分子外膜构成，外膜上存在蛋白。但是不同点如下：大小不同，脂滴（100nm - 100 um）比脂蛋白（20-500 nm）要大很多；功能不同，脂滴主要用做细胞内脂质的储存，脂蛋白主要用作脂质在血液中的运输，因此二者表面的蛋白种类差异也很大。几乎所有的细胞都能合成脂滴，但只有少部分的细胞类型可以合成脂蛋白组装需要的特殊蛋白（比如载脂蛋白apoB，apolipoprotein B 和microsomal TG transfer protein）</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;lipid droplet biology&lt;/p&gt;
&lt;p&gt;lipid是什么&lt;br&gt;最主要的能量储存形式&lt;br&gt;以甘油三酯（最主要），兹醇酯，蜡酯等形式存储&lt;br&gt;用作能量储存的优点：能量密度高；高度还原，可用于氧化；存储过程不需要水的参与&lt;/p&gt;
&lt;p&gt;lipid drop</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>blast</title>
    <link href="https://sqwwww.github.io/wiki/blast/"/>
    <id>https://sqwwww.github.io/wiki/blast/</id>
    <published>2022-08-07T10:12:35.000Z</published>
    <updated>2022-08-16T16:59:57.815Z</updated>
    
    <content type="html"><![CDATA[<p>pep_fa&#x3D;Habd.faa<br>makeblastdb -in $pep_fa -dbtype prot -out blastIndex&#x2F;Ha_pep</p><p>blastp -query $qry_fa -out $out_name -db $index -outfmt 6 -evalue 1e-5 -num_threads 11 -max_target_seqs 6</p><p>tblastn -query $qry_fa -out $out_name -db $index -outfmt 6 -evalue 1e-5 -num_threads 11 -max_target_seqs 1<br>blastp输出结果<br>    qseqid query (e.g., unknown gene) sequence id<br>    sseqid subject (e.g., reference genome) sequence id<br>    pident percentage of identical matches<br>    length alignment length (sequence overlap)<br>    mismatch number of mismatches<br>    gapopen number of gap openings<br>    qstart start of alignment in query<br>    qend end of alignment in query<br>    sstart start of alignment in subject<br>    send end of alignment in subject<br>    evalue expect value<br>    bitscore bit score</p><p>blast 参数详细<br>如果只想取query的最优比对，设置 -max_target_seqs 1；自我比对的时候只会得到原始序列<br>想要每个query-subject的唯一最优对应，设置 -max_target_seqs 500 -max_hsps 1</p><p>blastdbcmd 从blast构建好的数据库中提取序列</p><p>blat<br>ref_fa&#x3D;<br>qry_fa&#x3D;<br>out_name&#x3D;<br>blat -t&#x3D;dna -q&#x3D;dna $ref_fa $qry_fa $out_name</p><p>nucmer</p><p>nucmer -p $1_$2 $ref $query<br>nucmer fhap1_chr1.fa fhap2_chr1.fa &amp;&gt; fhap12.log<br>&#x2F;public&#x2F;home&#x2F;Zexian&#x2F;mummer3&#x2F;MUMmer3.23&#x2F;delta-filter -1 out.delta &gt; filter.delta</p><p>&#x2F;public&#x2F;home&#x2F;Zexian&#x2F;mummer3&#x2F;MUMmer3.23&#x2F;show-coords -T -q -H filter.delta &gt; XR_coord.txt</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pep_fa&amp;#x3D;Habd.faa&lt;br&gt;makeblastdb -in $pep_fa -dbtype prot -out blastIndex&amp;#x2F;Ha_pep&lt;/p&gt;
&lt;p&gt;blastp -query $qry_fa -out $out_name -db </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>fish</title>
    <link href="https://sqwwww.github.io/wiki/fish/"/>
    <id>https://sqwwww.github.io/wiki/fish/</id>
    <published>2022-08-05T08:30:12.000Z</published>
    <updated>2022-08-06T15:52:19.716Z</updated>
    
    <content type="html"><![CDATA[<p>脊椎动物亚门vertebrate<br>    圆口纲<br>    软骨鱼纲<br>    硬骨鱼纲<br>    两栖纲<br>    爬行纲<br>    鸟纲<br>    哺乳纲</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;脊椎动物亚门vertebrate&lt;br&gt;    圆口纲&lt;br&gt;    软骨鱼纲&lt;br&gt;    硬骨鱼纲&lt;br&gt;    两栖纲&lt;br&gt;    爬行纲&lt;br&gt;    鸟纲&lt;br&gt;    哺乳纲&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>fastq-dump</title>
    <link href="https://sqwwww.github.io/wiki/fastq-dump/"/>
    <id>https://sqwwww.github.io/wiki/fastq-dump/</id>
    <published>2022-07-30T15:54:51.000Z</published>
    <updated>2022-08-08T03:21:21.032Z</updated>
    
    <content type="html"><![CDATA[<p>fastq-dump –gzip –split-3 SRR12601728.sra，用了两个小时，真慢<br>–split-3智能检测是单端还是双端的reads<br>fastqc查看是否为clean reads</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;fastq-dump –gzip –split-3 SRR12601728.sra，用了两个小时，真慢&lt;br&gt;–split-3智能检测是单端还是双端的reads&lt;br&gt;fastqc查看是否为clean reads&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>coverage_pipeline</title>
    <link href="https://sqwwww.github.io/wiki/coverage-pipeline/"/>
    <id>https://sqwwww.github.io/wiki/coverage-pipeline/</id>
    <published>2022-07-28T09:45:49.000Z</published>
    <updated>2022-08-08T03:17:59.158Z</updated>
    
    <content type="html"><![CDATA[<p>从bam文件到coverage<br>sambamba depth window –overlap 2500 -w 5000 -o female_Mhap1_depth.txt -t 28 -q&#x3D;30 $bam</p><p>得到用来做normalise的depth</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">file=$1</span><br><span class="line">samtools stats $file &gt; $&#123;file&#125;_temp</span><br><span class="line">number=$(grep ^COV $&#123;file&#125;_temp | cut -f 2- | awk -v max=0 &#x27;&#123;if($3&gt;max)&#123;want=$2; max=$3&#125;&#125;END&#123;print want&#125; &#x27; -)</span><br><span class="line">rm $&#123;file&#125;_temp</span><br><span class="line">echo $file $number &gt; $&#123;file&#125;_modal_depth.txt</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从bam文件到coverage&lt;br&gt;sambamba depth window –overlap 2500 -w 5000 -o female_Mhap1_depth.txt -t 28 -q&amp;#x3D;30 $bam&lt;/p&gt;
&lt;p&gt;得到用来做normalise的dept</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>R</title>
    <link href="https://sqwwww.github.io/wiki/R/"/>
    <id>https://sqwwww.github.io/wiki/R/</id>
    <published>2022-07-25T04:40:17.000Z</published>
    <updated>2022-08-17T07:59:24.165Z</updated>
    
    <content type="html"><![CDATA[<p>data.table<br>    赋值<br>    df_combined[,’:&#x3D;’(‘1_2’ &#x3D; sub1 &gt; sub2, ‘1_3’ &#x3D; sub1 &gt; sub3, ‘1_4’ &#x3D; sub1 &gt; sub4, ‘1_5’ &#x3D; sub1&gt; sub5,<br>                    ‘2_3’ &#x3D; sub2&gt;sub3, ‘2_4’&#x3D; sub2&gt;sub4,’2_5’&#x3D; sub2&gt;sub5,<br>                    ‘3_4’&#x3D;sub3&gt;sub4, ‘3_5’&#x3D;sub3&gt;sub5,<br>                    ‘4_5’&#x3D;sub4&gt;sub5)]<br>    DT[i, c(“LHS1”, “LHS2”) :&#x3D; list(RHS1, RHS2), by &#x3D; …]</p><pre><code>window变regionmyWindow[order(CN, S,E),         g := .(cumsum(c(0L,(shift(S, -1) &gt; cummax(E))[-.N]))),by = CN]myRegion &lt;- myWindow[order(CN,S,E),.(NS = min(S), NE = max(E), num = .N, log = mean(log2MFR)),                    by = .(CN, g)]df_combined_filtered[order(CHROM, BIN_START,BIN_END),         g := .(cumsum(c(0L,(shift(BIN_START, -1) &gt; cummax(BIN_END))[-.N]))),by = CHROM]myRegion &lt;- df_combined_filtered[order(CHROM, BIN_START,BIN_END),.(NS = min(S), NE = max(E), num = .N,                    by = .(CHROM, g)]根据向量选取列（select multiple columns using a character vector）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">columns &lt;- c(&#x27;mpg&#x27;, &#x27;cyl&#x27;, &#x27;disp&#x27;)</span><br><span class="line">mtcars_dt[, columns, with=FALSE]</span><br><span class="line">mtcars_dt[, .(mpg, cyl, gear)]</span><br><span class="line"></span><br></pre></td></tr></table></figure>对某一列重命名setnames(tmp_data, &quot;gene_id&quot;, current_sampleID)Pitching[ , .SD, .SDcols = c(&#39;W&#39;, &#39;L&#39;, &#39;G&#39;)]DT[i, c(&quot;LHS1&quot;, &quot;LHS2&quot;) := list(RHS1, RHS2), by = ...]填补NAreplace_na(df$X1,5) # 把df的X1列中的NA填充为5改变列的数据类型mRNA_gff[, V3:= lapply(V3, as.numeric)]setkey和setkeyv用来对data table 进行排序，setkey是根据一列排，setkeyv可以根据多列排<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">    a &lt;- fread(file = paste0(&quot;../published/NC21/&quot;,samp,&quot;_depth.txt&quot;))</span><br><span class="line">    setnames(a, &quot;# chrom&quot;, &quot;chrom&quot;)</span><br><span class="line">    setnames(a, &quot;meanCoverage&quot;, &quot;samp&quot;)</span><br><span class="line">    tmp_1 &lt;- a[,.(chrom,chromStart,chromEnd, samp)]</span><br><span class="line">    setkeyv(tmp_1, c(&quot;chrom&quot;,&quot;chromStart&quot;,&quot;chromEnd&quot;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dylyr</span><br><span class="line">filter</span><br><span class="line">raw_ortho %&gt;% filter_all(all_vars(. != &quot;N&quot;))</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(name, sleep_total) %&gt;% </span><br><span class="line">  filter(between(sleep_total, 16, 18))</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(name, sleep_total) %&gt;% </span><br><span class="line">  filter(near(sleep_total, 17, tol = sd(sleep_total)))</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(order, name, sleep_total) %&gt;% </span><br><span class="line">  filter(order %in% c(&quot;Didelphimorphia&quot;, &quot;Diprotodontia&quot;))</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(order, name, sleep_total) %&gt;% </span><br><span class="line">  filter(!order %in% remove)</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(name, sleep_total) %&gt;% </span><br><span class="line">  filter(str_detect(tolower(name), pattern = &quot;mouse&quot;)) #filter(grepl(pattern=&quot;mouse&quot;, tolower(name)))</span><br><span class="line"></span><br><span class="line">filter(condition1, condition2)</span><br><span class="line">filter(condition1, !condition2)</span><br><span class="line">filter(condition1 | condition2) # return rows where condition 1 and/or condition 2 is met.</span><br><span class="line">filter(xor(condition1, condition2) # return all rows where only one of the conditions is met, and not when both conditions are met.</span><br><span class="line"></span><br><span class="line"># 删除某一列含有NA的行</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(name, conservation:sleep_cycle) %&gt;% </span><br><span class="line">  filter(!is.na(conservation))</span><br><span class="line"></span><br><span class="line">#根据多列进行过滤</span><br><span class="line">    filter_all() will filter all columns based on your further instructions</span><br><span class="line">    filter_if() requires a function that returns a boolean to indicate which columns to filter on. If that is true, the filter instructions will be followed for those columns.</span><br><span class="line">    filter_at() requires you to specify columns inside a vars() argument for which the filtering will be done.</span><br><span class="line"></span><br><span class="line">    any_vars() statement is equivalent to OR</span><br><span class="line">    all_vars() statement is equivalent to AND</span><br><span class="line"></span><br><span class="line">    msleep %&gt;% </span><br><span class="line">        select(name:order, sleep_total, -vore) %&gt;% </span><br><span class="line">        filter_all(any_vars(str_detect(., pattern = &quot;Ca&quot;)))</span><br><span class="line"></span><br><span class="line">    msleep %&gt;%  </span><br><span class="line">        select(name, sleep_total:bodywt) %&gt;% </span><br><span class="line">        filter_all(any_vars(. &lt; 0.1))</span><br><span class="line"></span><br><span class="line">    msleep %&gt;% </span><br><span class="line">        select(name:order, sleep_total:sleep_rem) %&gt;% </span><br><span class="line">        filter_if(is.character, any_vars(is.na(.))) # is.numeric, is.integer, is.double, is.logical, is.factor</span><br><span class="line"></span><br><span class="line">    msleep %&gt;% </span><br><span class="line">        select(name, sleep_total:sleep_rem, brainwt:bodywt) %&gt;% </span><br><span class="line">        filter_at(vars(sleep_total, sleep_rem), all_vars(.&gt;5)) #all_vars() if all columns need to return TRUE (AND equivalent)</span><br><span class="line">    # you can just select columns to which the change should happen via the vars()</span><br><span class="line">    msleep %&gt;% </span><br><span class="line">        select(name, sleep_total:sleep_rem, brainwt:bodywt) %&gt;% </span><br><span class="line">        filter_at(vars(contains(&quot;sleep&quot;)), all_vars(.&gt;5)) #any_vars() in case just one variable needs to return TRUE (OR equivalent)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;data.table&lt;br&gt;    赋值&lt;br&gt;    df_combined[,’:&amp;#x3D;’(‘1_2’ &amp;#x3D; sub1 &amp;gt; sub2, ‘1_3’ &amp;#x3D; sub1 &amp;gt; sub3, ‘1_4’ &amp;#x3D; sub1 &amp;gt; sub4,</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>data.table用法</title>
    <link href="https://sqwwww.github.io/wiki/shell%E6%8A%80%E5%B7%A7/"/>
    <id>https://sqwwww.github.io/wiki/shell%E6%8A%80%E5%B7%A7/</id>
    <published>2022-07-25T04:40:17.000Z</published>
    <updated>2022-08-14T13:55:07.897Z</updated>
    
    <content type="html"><![CDATA[<p>加法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i=0</span><br><span class="line">let &#x27;i+=1&#x27;</span><br><span class="line"></span><br><span class="line">echo &#x27;scale=2;2+3&#x27; | bc</span><br></pre></td></tr></table></figure><p>if 语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [-e filename]</span><br><span class="line"></span><br><span class="line">for 语句</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关联数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">declare -A ass_array # 声明</span><br><span class="line">ass_array=([&quot;PE&quot;]=0 [&quot;PM&quot;]=0 [&quot;PL&quot;]=0 [&quot;PN&quot;]=0 [&quot;PB&quot;]=0) # 初始化</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat ../../published/mbe_15/phenotype.txt |while read id; do </span><br><span class="line"></span><br><span class="line">srr=`echo $id|awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">pheno=`echo $id|awk &#x27;&#123;print $NF&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">fq1=/public2/home/qianwei/project/seahorse/published/mbe_15/$srr/$&#123;srr&#125;_1.fastq.gz</span><br><span class="line">fq2=/public2/home/qianwei/project/seahorse/published/mbe_15/$srr/$&#123;srr&#125;_2.fastq.gz</span><br><span class="line"></span><br><span class="line">let &#x27;ass_array[$pheno]+=1&#x27; # 赋值 加法</span><br><span class="line">#echo $pheno $&#123;ass_array[$pheno]&#125;</span><br><span class="line">fq11=Ha$&#123;pheno&#125;_MPL$&#123;ass_array[$pheno]&#125;_raw_1.fastq.gz</span><br><span class="line">fq22=Ha$&#123;pheno&#125;_MPL$&#123;ass_array[$pheno]&#125;_raw_2.fastq.gz</span><br><span class="line">#echo $fq11</span><br><span class="line">ln -s $fq1 $fq11</span><br><span class="line">ln -s $fq2 $fq22</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#从软链接拷贝软链接（默认拷贝文件）,用-d选项</span><br><span class="line">ln -s $source link_file</span><br><span class="line">cp -d link_file $new_dir</span><br><span class="line"># 从文件拷贝软链接，用 -s 选项</span><br><span class="line">cp -s $source link_file</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>find,xargs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 按时间查找, find . &#123;-atime/-ctime/-mtime/-amin/-cmin/-mmin&#125; [-/+]num</span><br><span class="line">-1 一天内</span><br><span class="line">+1 一天前</span><br><span class="line"># 按名称查找 -name 参数</span><br><span class="line"># xargs传递参数，-i选项，可以把参数传递给&#123;&#125;</span><br><span class="line">find ../final_fq -mtime -1 -name &quot;Ha*&quot; | xargs -i cp -d &#123;&#125; ./</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;加法&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ragtag使用</title>
    <link href="https://sqwwww.github.io/wiki/ragtag%E4%BD%BF%E7%94%A8/"/>
    <id>https://sqwwww.github.io/wiki/ragtag%E4%BD%BF%E7%94%A8/</id>
    <published>2022-07-18T15:54:44.000Z</published>
    <updated>2022-07-21T02:14:05.623Z</updated>
    
    <content type="html"><![CDATA[<p>ragtag.py scaffold &lt;reference.fa&gt; &lt;query.fa&gt;</p><p>scaffolding options:<br>  -e &lt;exclude.txt&gt;     list of reference sequences to ignore [null]<br>  -j &lt;skip.txt&gt;        list of query sequences to leave unplaced [null]<br>  -J &lt;hard-skip.txt&gt;   list of query headers to leave unplaced and exclude from ‘chr0’ (‘-C’) [null]<br>  -f INT               minimum unique alignment length [1000]<br>  –remove-small       remove unique alignments shorter than ‘-f’<br>  -q INT               minimum mapq (NA for Nucmer alignments) [10]<br>  -d INT               maximum alignment merge distance [100000]<br>  -i FLOAT             minimum grouping confidence score [0.2]<br>  -a FLOAT             minimum location confidence score [0.0]<br>  -s FLOAT             minimum orientation confidence score [0.0]<br>  -C                   concatenate unplaced contigs and make ‘chr0’<br>  -r                   infer gap sizes. if not, all gaps are 100 bp<br>  -g INT               minimum inferred gap size [100]<br>  -m INT               maximum inferred gap size [100000]</p><p>input&#x2F;output options:<br>  -o PATH              output directory [.&#x2F;ragtag_output]<br>  -w                   overwrite intermediate files<br>  -u                   add suffix to unplaced sequence headers</p><p>mapping options:<br>  -t INT               number of minimap2&#x2F;unimap threads [1]<br>  –aligner PATH       aligner executable (‘nucmer’, ‘unimap’ or ‘minimap2’) [minimap2]<br>  –mm2-params STR     space delimited minimap2 parameters (overrides ‘-t’) [‘-x asm5’]<br>  –unimap-params STR  space delimited unimap parameters (overrides ‘-t’) [‘-x asm5’]<br>  –nucmer-params STR  space delimted nucmer parameters [‘–maxmatch -l 100 -c 500’]</p><p>-C会将没地方放的contig&#x2F;scaffold连在一起放到chr0中（中间用100个N连接）</p><p>ragtag.py scaffold -u $ref $query -t 20 -C</p><p>cd ~&#x2F;project&#x2F;seahorse&#x2F;published&#x2F;assembly&#x2F;ragtag<br>bash ragtag.sh &amp;&gt; He_log</p><p>cd ~&#x2F;project&#x2F;seahorse&#x2F;published&#x2F;assembly&#x2F;map&#x2F;ref<br>ln -s &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;project&#x2F;seahorse&#x2F;published&#x2F;assembly&#x2F;ragtag&#x2F;ragtag_output_He&#x2F;ragtag.scaffold.fasta subelongatus.fa<br>bash bowtie2Index.sh &amp;&gt; sub_build.log<br>cd ..<br>bash DNApipeline.sh &amp;&gt; sub.map.log</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ragtag.py scaffold &amp;lt;reference.fa&amp;gt; &amp;lt;query.fa&amp;gt;&lt;/p&gt;
&lt;p&gt;scaffolding options:&lt;br&gt;  -e &amp;lt;exclude.txt&amp;gt;     list of reference se</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>bowtieAndBowtie2</title>
    <link href="https://sqwwww.github.io/wiki/biosoft/bowtieAndBowtie2/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/bowtieAndBowtie2/</id>
    <published>2022-07-16T09:01:36.000Z</published>
    <updated>2022-07-21T02:14:19.904Z</updated>
    
    <content type="html"><![CDATA[<p>bowtie和bowtie2的区别<br>这两个软件都适合DNA的比对，bowtie开发的比较早，适合短reads（50bp）的比对，bowtie2适合长一点的reads（150bp）的比对，现在的数据基本上都适合用bowtie2</p><p>bowtie2 如何选择 uniq mapping 的 reads</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;AS:&quot; aligned.sam | grep -v &quot;XS:i&quot;</span><br></pre></td></tr></table></figure><p>hisat比的话 grep “NH:i:1” aligned.sam | grep -v “ZS:i” </p><p>bowtie2 建立索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bowtie2-build --threads 25 $fa bowtie2Index/Ha</span><br></pre></td></tr></table></figure><p>bowtie2 比对</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ref=~/project/brain/ref/bowtie2-index/dmel-r6.12</span><br><span class="line">cores=12</span><br><span class="line">cat clean_list|while read id; do</span><br><span class="line">arr=($id)</span><br><span class="line">fq1=$&#123;arr[0]&#125;</span><br><span class="line">fq2=$&#123;arr[1]&#125;</span><br><span class="line">prefix=`basename $fq1 _clean_R1.fq.gz`</span><br><span class="line"></span><br><span class="line">echo $&#123;prefix&#125;--------------------------------------------------------------------------------</span><br><span class="line">bowtie2 -p $&#123;cores&#125; \</span><br><span class="line">-x $&#123;ref&#125; \</span><br><span class="line">-1 $&#123;fq1&#125; \</span><br><span class="line">-2 $&#123;fq2&#125; \</span><br><span class="line">-S $&#123;prefix&#125;.sam </span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$bowtie2-build -h<br>Bowtie 2 version 2.3.5.1 by Ben Langmead (<a href="mailto:&#x6c;&#97;&#x6e;&#x67;&#109;&#101;&#x61;&#64;&#99;&#115;&#x2e;&#x6a;&#104;&#x75;&#46;&#101;&#100;&#117;">&#x6c;&#97;&#x6e;&#x67;&#109;&#101;&#x61;&#64;&#99;&#115;&#x2e;&#x6a;&#104;&#x75;&#46;&#101;&#100;&#117;</a>, <a href="http://www.cs.jhu.edu/~langmea">www.cs.jhu.edu/~langmea</a>)<br>Usage: bowtie2-build [options]* <reference_in> <bt2_index_base><br>    reference_in            comma-separated list of files with ref sequences<br>    bt2_index_base          write bt2 data to files with this dir&#x2F;basename<br>*** Bowtie 2 indexes work only with v2 (not v1).  Likewise for v1 indexes. ***<br>Options:<br>    -f                      reference files are Fasta (default)<br>    -c                      reference sequences given on cmd line (as<br>                            <reference_in>)<br>    –large-index           force generated index to be ‘large’, even if ref<br>                            has fewer than 4 billion nucleotides<br>    –debug                 use the debug binary; slower, assertions enabled<br>    –sanitized             use sanitized binary; slower, uses ASan and&#x2F;or UBSan<br>    –verbose               log the issued command<br>    -a&#x2F;–noauto             disable automatic -p&#x2F;–bmax&#x2F;–dcv memory-fitting<br>    -p&#x2F;–packed             use packed strings internally; slower, less memory<br>    –bmax <int>            max bucket sz for blockwise suffix-array builder<br>    –bmaxdivn <int>        max bucket sz as divisor of ref len (default: 4)<br>    –dcv <int>             diff-cover period for blockwise (default: 1024)<br>    –nodc                  disable diff-cover (algorithm becomes quadratic)<br>    -r&#x2F;–noref              don’t build .3&#x2F;.4 index files<br>    -3&#x2F;–justref            just build .3&#x2F;.4 index files<br>    -o&#x2F;–offrate <int>      SA is sampled every 2^<int> BWT chars (default: 5)<br>    -t&#x2F;–ftabchars <int>    # of chars consumed in initial lookup (default: 10)<br>    –threads <int>         # of threads<br>    –seed <int>            seed for random number generator<br>    -q&#x2F;–quiet              verbose output (for debugging)<br>    -h&#x2F;–help               print detailed description of tool and its options<br>    –usage                 print this usage message<br>    –version               print version information and quit</p><p>$bowtie2 -h<br>Bowtie 2 version 2.3.5.1 by Ben Langmead (<a href="mailto:&#108;&#97;&#x6e;&#x67;&#109;&#x65;&#97;&#64;&#x63;&#115;&#46;&#106;&#x68;&#117;&#46;&#101;&#100;&#x75;">&#108;&#97;&#x6e;&#x67;&#109;&#x65;&#97;&#64;&#x63;&#115;&#46;&#106;&#x68;&#117;&#46;&#101;&#100;&#x75;</a>, <a href="http://www.cs.jhu.edu/~langmea">www.cs.jhu.edu/~langmea</a>)<br>Usage:<br>  bowtie2 [options]* -x <bt2-idx> {-1 <m1> -2 <m2> | -U <r> | –interleaved <i> | -b <bam>} [-S <sam>]</p><p>  <bt2-idx>  Index filename prefix (minus trailing .X.bt2).<br>             NOTE: Bowtie 1 and Bowtie 2 indexes are not compatible.<br>  <m1>       Files with #1 mates, paired with files in <m2>.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <m2>       Files with #2 mates, paired with files in <m1>.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <r>        Files with unpaired reads.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <i>        Files with interleaved paired-end FASTQ&#x2F;FASTA reads<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <bam>      Files are unaligned BAM sorted by read name.<br>  <sam>      File for SAM output (default: stdout)</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;bowtie和bowtie2的区别&lt;br&gt;这两个软件都适合DNA的比对，bowtie开发的比较早，适合短reads（50bp）的比对，bowtie2适合长一点的reads（150bp）的比对，现在的数据基本上都适合用bowtie2&lt;/p&gt;
&lt;p&gt;bowtie2 如何选择 u</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
  <entry>
    <title>StardewValley</title>
    <link href="https://sqwwww.github.io/wiki/StardewValley/"/>
    <id>https://sqwwww.github.io/wiki/StardewValley/</id>
    <published>2022-07-16T07:54:51.000Z</published>
    <updated>2022-07-16T09:21:01.964Z</updated>
    
    <content type="html"><![CDATA[<p>小桶和罐头瓶</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;小桶和罐头瓶&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>stringtie使用</title>
    <link href="https://sqwwww.github.io/wiki/stringtie%E4%BD%BF%E7%94%A8/"/>
    <id>https://sqwwww.github.io/wiki/stringtie%E4%BD%BF%E7%94%A8/</id>
    <published>2022-07-16T02:40:55.000Z</published>
    <updated>2022-07-16T09:21:01.964Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">$stringtie -h</span><br><span class="line">StringTie v2.1.5 usage:</span><br><span class="line"></span><br><span class="line">stringtie &lt;in.bam ..&gt; [-G &lt;guide_gff&gt;] [-l &lt;prefix&gt;] [-o &lt;out.gtf&gt;] [-p &lt;cpus&gt;]</span><br><span class="line"> [-v] [-a &lt;min_anchor_len&gt;] [-m &lt;min_len&gt;] [-j &lt;min_anchor_cov&gt;] [-f &lt;min_iso&gt;]</span><br><span class="line"> [-c &lt;min_bundle_cov&gt;] [-g &lt;bdist&gt;] [-u] [-L] [-e] [--viral] [-E &lt;err_margin&gt;]</span><br><span class="line"> [--ptf &lt;f_tab&gt;] [-x &lt;seqid,..&gt;] [-A &lt;gene_abund.out&gt;] [-h] &#123;-B|-b &lt;dir_path&gt;&#125;</span><br><span class="line">Assemble RNA-Seq alignments into potential transcripts.</span><br><span class="line">Options:</span><br><span class="line"> --version : print just the version at stdout and exit</span><br><span class="line"> --conservative : conservative transcript assembly, same as -t -c 1.5 -f 0.05</span><br><span class="line"> --rf : assume stranded library fr-firststrand</span><br><span class="line"> --fr : assume stranded library fr-secondstrand</span><br><span class="line"> -G reference annotation to use for guiding the assembly process (GTF/GFF3)</span><br><span class="line"> --ptf : load point-features from a given 4 column feature file &lt;f_tab&gt;</span><br><span class="line"> -o output path/file name for the assembled transcripts GTF (default: stdout)</span><br><span class="line"> -l name prefix for output transcripts (default: STRG)</span><br><span class="line"> -f minimum isoform fraction (default: 0.01)</span><br><span class="line"> -L long reads processing; also enforces -s 1.5 -g 0 (default:false)</span><br><span class="line"> -R if long reads are provided, just clean and collapse the reads but</span><br><span class="line">    do not assemble</span><br><span class="line"> -m minimum assembled transcript length (default: 200)</span><br><span class="line"> -a minimum anchor length for junctions (default: 10)</span><br><span class="line"> -j minimum junction coverage (default: 1)</span><br><span class="line"> -t disable trimming of predicted transcripts based on coverage</span><br><span class="line">    (default: coverage trimming is enabled)</span><br><span class="line"> -c minimum reads per bp coverage to consider for multi-exon transcript</span><br><span class="line">    (default: 1)</span><br><span class="line"> -s minimum reads per bp coverage to consider for single-exon transcript</span><br><span class="line">    (default: 4.75)</span><br><span class="line"> -v verbose (log bundle processing details)</span><br><span class="line"> -g maximum gap allowed between read mappings (default: 50)</span><br><span class="line"> -M fraction of bundle allowed to be covered by multi-hit reads (default:1)</span><br><span class="line"> -p number of threads (CPUs) to use (default: 1)</span><br><span class="line"> -A gene abundance estimation output file</span><br><span class="line"> -E define window around possibly erroneous splice sites from long reads to</span><br><span class="line">    look out for correct splice sites (default: 25)</span><br><span class="line"> -B enable output of Ballgown table files which will be created in the</span><br><span class="line">    same directory as the output GTF (requires -G, -o recommended)</span><br><span class="line"> -b enable output of Ballgown table files but these files will be </span><br><span class="line">    created under the directory path given as &lt;dir_path&gt;</span><br><span class="line"> -e only estimate the abundance of given reference transcripts (requires -G)</span><br><span class="line"> --viral : only relevant for long reads from viral data where splice sites</span><br><span class="line">    do not follow consensus (default:false)</span><br><span class="line"> -x do not assemble any transcripts on the given reference sequence(s)</span><br><span class="line"> -u no multi-mapping correction (default: correction enabled)</span><br><span class="line"> -h print this usage message and exit</span><br><span class="line">Transcript merge usage mode: </span><br><span class="line">  stringtie --merge [Options] &#123; gtf_list | strg1.gtf ...&#125;</span><br><span class="line">With this option StringTie will assemble transcripts from multiple</span><br><span class="line">input files generating a unified non-redundant set of isoforms. In this mode</span><br><span class="line">the following options are available:</span><br><span class="line">  -G &lt;guide_gff&gt;   reference annotation to include in the merging (GTF/GFF3)</span><br><span class="line">  -o &lt;out_gtf&gt;     output file name for the merged transcripts GTF</span><br><span class="line">                    (default: stdout)</span><br><span class="line">  -m &lt;min_len&gt;     minimum input transcript length to include in the merge</span><br><span class="line">                    (default: 50)</span><br><span class="line">  -c &lt;min_cov&gt;     minimum input transcript coverage to include in the merge</span><br><span class="line">                    (default: 0)</span><br><span class="line">  -F &lt;min_fpkm&gt;    minimum input transcript FPKM to include in the merge</span><br><span class="line">                    (default: 1.0)</span><br><span class="line">  -T &lt;min_tpm&gt;     minimum input transcript TPM to include in the merge</span><br><span class="line">                    (default: 1.0)</span><br><span class="line">  -f &lt;min_iso&gt;     minimum isoform fraction (default: 0.01)</span><br><span class="line">  -g &lt;gap_len&gt;     gap between transcripts to merge together (default: 250)</span><br><span class="line">  -i               keep merged transcripts with retained introns; by default</span><br><span class="line">                   these are not kept unless there is strong evidence for them</span><br><span class="line">  -l &lt;label&gt;       name prefix for output transcripts (default: MSTRG)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>The generic command line for the default usage has this format::</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stringtie [-o &lt;output.gtf&gt;] [other_options] &lt;read_alignments.bam&gt;</span><br></pre></td></tr></table></figure><p>StringTie takes as input a SAM, BAM or CRAM file sorted by coordinate (genomic location).<br>samtools sort -o alnst.sorted.bam alns.sam</p><p>A reference annotation file in GTF or GFF3 format can be provided to StringTie using the -G option which can be used as ‘guides’ for the assembly process and help improve the transcript structure recovery for those transcripts.</p><p>Expression estimation mode (-e),我该用这个模式，只做定量<br>When the -e option is used, the reference annotation file -G is a required input and StringTie will not attempt to assemble the input read alignments but instead it will only estimate the expression levels of the “reference” transcripts provided in the -G file.</p><p>With this option, no “novel” transcript assemblies (isoforms) will be produced, and read alignments not overlapping any of the given reference transcripts will be ignored, which may provide a considerable speed boost when the given set of reference transcripts is limited to a set of target genes for example.</p><p>for each RNA-Seq sample, map the reads to the genome with HISAT2 using the –dta option. It is highly recommended to use the reference annotation information when mapping the reads, which can be either embedded in the genome index (built with the –ss and –exon options, see HISAT2 manual), or provided separately at run time (using the –known-splicesite-infile option of HISAT2). The SAM output of each HISAT2 run must be sorted and converted to BAM using samtools as explained above.</p><p>参考网页 ：<a href="http://ccb.jhu.edu/software/stringtie/index.shtml?t=manual">http://ccb.jhu.edu/software/stringtie/index.shtml?t=manual</a></p><p>hisat2_index&#x3D;&#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;project&#x2F;seahorse&#x2F;02.ref&#x2F;hisat2Index&#x2F;Ha<br>gff&#x3D;&#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;project&#x2F;seahorse&#x2F;02.ref&#x2F;Ha.gff<br>threads&#x3D;15<br>cat fq.list| while read id; do<br>arr&#x3D;($id)<br>fq1&#x3D;${arr[0]}<br>fq2&#x3D;${arr[1]}</p><p>hisat2 -p $threads –dta -x $hisat2_index -1 $fq1 -2 $fq2 -S ${sample}.sam<br>grep -P ‘@|NH:i:1\b’ ${sample}.sam | grep -v “ZS:i” &gt; ${sample}.uniq.sam<br>samtools view -@ 4 -bS ${sample}.uniq.sam | samtools sort -@ 4 -m 3g -o ${sample}.uniq.bam -<br>stringtie -p $threads -G ${gff} -B -e -l ${sample} -o ${sample}.gtf ${sample}.uniq.bam</p><p>HISAT2 version 2.2.1 by Daehwan Kim (<a href="mailto:&#x69;&#x6e;&#x66;&#112;&#104;&#105;&#x6c;&#x6f;&#64;&#x67;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;">&#x69;&#x6e;&#x66;&#112;&#104;&#105;&#x6c;&#x6f;&#64;&#x67;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;</a>, <a href="http://www.ccb.jhu.edu/people/infphilo">www.ccb.jhu.edu/people/infphilo</a>)<br>Usage:<br>  hisat2 [options]* -x <ht2-idx> {-1 <m1> -2 <m2> | -U <r>} [-S <sam>]</p><p>  <ht2-idx>  Index filename prefix (minus trailing .X.ht2).<br>  <m1>       Files with #1 mates, paired with files in <m2>.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <m2>       Files with #2 mates, paired with files in <m1>.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <r>        Files with unpaired reads.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <sam>      File for SAM output (default: stdout)</p><p>  <m1>, <m2>, <r> can be comma-separated lists (no whitespace) and can be<br>  specified many times.  E.g. ‘-U file1.fq,file2.fq -U file3.fq’.</p><p>Options (defaults in parentheses):</p><p> Input:<br>  -q                 query input files are FASTQ .fq&#x2F;.fastq (default)<br>  –qseq             query input files are in Illumina’s qseq format<br>  -f                 query input files are (multi-)FASTA .fa&#x2F;.mfa<br>  -r                 query input files are raw one-sequence-per-line<br>  -c                 <m1>, <m2>, <r> are sequences themselves, not files<br>  -s&#x2F;–skip <int>    skip the first <int> reads&#x2F;pairs in the input (none)<br>  -u&#x2F;–upto <int>    stop after first <int> reads&#x2F;pairs (no limit)<br>  -5&#x2F;–trim5 <int>   trim <int> bases from 5’&#x2F;left end of reads (0)<br>  -3&#x2F;–trim3 <int>   trim <int> bases from 3’&#x2F;right end of reads (0)<br>  –phred33          qualities are Phred+33 (default)<br>  –phred64          qualities are Phred+64<br>  –int-quals        qualities encoded as space-delimited integers</p><p> Presets:                 Same as:<br>   –fast                 –no-repeat-index<br>   –sensitive            –bowtie2-dp 1 -k 30 –score-min L,0,-0.5<br>   –very-sensitive       –bowtie2-dp 2 -k 50 –score-min L,0,-1</p><p> Alignment:<br>  –bowtie2-dp <int> use Bowtie2’s dynamic programming alignment algorithm (0) - 0: no dynamic programming, 1: conditional dynamic programming, and 2: unconditional dynamic programming (slowest)<br>  –n-ceil <func>    func for max # non-A&#x2F;C&#x2F;G&#x2F;Ts permitted in aln (L,0,0.15)<br>  –ignore-quals     treat all quality values as 30 on Phred scale (off)<br>  –nofw             do not align forward (original) version of read (off)<br>  –norc             do not align reverse-complement version of read (off)<br>  –no-repeat-index  do not use repeat index</p><p> Spliced Alignment:<br>  –pen-cansplice <int>              penalty for a canonical splice site (0)<br>  –pen-noncansplice <int>           penalty for a non-canonical splice site (12)<br>  –pen-canintronlen <func>          penalty for long introns (G,-8,1) with canonical splice sites<br>  –pen-noncanintronlen <func>       penalty for long introns (G,-8,1) with noncanonical splice sites<br>  –min-intronlen <int>              minimum intron length (20)<br>  –max-intronlen <int>              maximum intron length (500000)<br>  –known-splicesite-infile <path>   provide a list of known splice sites<br>  –novel-splicesite-outfile <path>  report a list of splice sites<br>  –novel-splicesite-infile <path>   provide a list of novel splice sites<br>  –no-temp-splicesite               disable the use of splice sites found<br>  –no-spliced-alignment             disable spliced alignment<br>  –rna-strandness <string>          specify strand-specific information (unstranded)<br>  –tmo                              reports only those alignments within known transcriptome<br>  –dta                              reports alignments tailored for transcript assemblers<br>  –dta-cufflinks                    reports alignments tailored specifically for cufflinks<br>  –avoid-pseudogene                 tries to avoid aligning reads to pseudogenes (experimental option)<br>  –no-templatelen-adjustment        disables template length adjustment for RNA-seq reads</p><p> Scoring:<br>  –mp <int>,<int>   max and min penalties for mismatch; lower qual &#x3D; lower penalty &lt;6,2&gt;<br>  –sp <int>,<int>   max and min penalties for soft-clipping; lower qual &#x3D; lower penalty &lt;2,1&gt;<br>  –no-softclip      no soft-clipping<br>  –np <int>         penalty for non-A&#x2F;C&#x2F;G&#x2F;Ts in read&#x2F;ref (1)<br>  –rdg <int>,<int>  read gap open, extend penalties (5,3)<br>  –rfg <int>,<int>  reference gap open, extend penalties (5,3)<br>  –score-min <func> min acceptable alignment score w&#x2F;r&#x2F;t read length<br>                     (L,0.0,-0.2)</p><p> Reporting:<br>  -k <int>           It searches for at most <int> distinct, primary alignments for each read. Primary alignments mean<br>                     alignments whose alignment score is equal to or higher than any other alignments. The search terminates<br>                     when it cannot find more distinct valid alignments, or when it finds <int>, whichever happens first.<br>                     The alignment score for a paired-end alignment equals the sum of the alignment scores of<br>                     the individual mates. Each reported read or pair alignment beyond the first has the SAM ‘secondary’ bit<br>                     (which equals 256) set in its FLAGS field. For reads that have more than <int> distinct,<br>                     valid alignments, hisat2 does not guarantee that the <int> alignments reported are the best possible<br>                     in terms of alignment score. Default: 5 (linear index) or 10 (graph index).<br>                     Note: HISAT2 is not designed with large values for -k in mind, and when aligning reads to long,<br>                     repetitive genomes, large -k could make alignment much slower.<br>  –max-seeds <int>  HISAT2, like other aligners, uses seed-and-extend approaches. HISAT2 tries to extend seeds to<br>                     full-length alignments. In HISAT2, –max-seeds is used to control the maximum number of seeds that<br>                     will be extended. For DNA-read alignment (–no-spliced-alignment), HISAT2 extends up to these many seeds<br>                     and skips the rest of the seeds. For RNA-read alignment, HISAT2 skips extending seeds and reports<br>                     no alignments if the number of seeds is larger than the number specified with the option,<br>                     to be compatible with previous versions of HISAT2. Large values for –max-seeds may improve alignment<br>                     sensitivity, but HISAT2 is not designed with large values for –max-seeds in mind, and when aligning<br>                     reads to long, repetitive genomes, large –max-seeds could make alignment much slower.<br>                     The default value is the maximum of 5 and the value that comes with -k times 2.<br>  -a&#x2F;–all           HISAT2 reports all alignments it can find. Using the option is equivalent to using both –max-seeds<br>                     and -k with the maximum value that a 64-bit signed integer can represent (9,223,372,036,854,775,807).<br>  –repeat           report alignments to repeat sequences directly</p><p> Paired-end:<br>  -I&#x2F;–minins <int>  minimum fragment length (0), only valid with –no-spliced-alignment<br>  -X&#x2F;–maxins <int>  maximum fragment length (500), only valid with –no-spliced-alignment<br>  –fr&#x2F;–rf&#x2F;–ff     -1, -2 mates align fw&#x2F;rev, rev&#x2F;fw, fw&#x2F;fw (–fr)<br>  –no-mixed         suppress unpaired alignments for paired reads<br>  –no-discordant    suppress discordant alignments for paired reads</p><p> Output:<br>  -t&#x2F;–time          print wall-clock time taken by search phases<br>  –un <path>           write unpaired reads that didn’t align to <path><br>  –al <path>           write unpaired reads that aligned at least once to <path><br>  –un-conc <path>      write pairs that didn’t align concordantly to <path><br>  –al-conc <path>      write pairs that aligned concordantly at least once to <path><br>  (Note: for –un, –al, –un-conc, or –al-conc, add ‘-gz’ to the option name, e.g.<br>  –un-gz <path>, to gzip compress output, or add ‘-bz2’ to bzip2 compress output.)<br>  –summary-file <path> print alignment summary to this file.<br>  –new-summary         print alignment summary in a new style, which is more machine-friendly.<br>  –quiet               print nothing to stderr except serious errors<br>  –met-file <path>     send metrics to file at <path> (off)<br>  –met-stderr          send metrics to stderr (off)<br>  –met <int>           report internal counters &amp; metrics every <int> secs (1)<br>  –no-head             suppress header lines, i.e. lines starting with @<br>  –no-sq               suppress @SQ header lines<br>  –rg-id <text>        set read group id, reflected in @RG line and RG:Z: opt field<br>  –rg <text>           add <text> (“lab:value”) to @RG line of SAM header.<br>                        Note: @RG line only printed when –rg-id is set.<br>  –omit-sec-seq        put ‘*’ in SEQ and QUAL fields for secondary alignments.</p><p> Performance:<br>  -o&#x2F;–offrate <int> override offrate of index; must be &gt;&#x3D; index’s offrate<br>  -p&#x2F;–threads <int> number of alignment threads to launch (1)<br>  –reorder          force SAM output order to match order of input reads<br>  –mm               use memory-mapped I&#x2F;O for index; many ‘hisat2’s can share</p><p> Other:<br>  –qc-filter        filter out reads that are bad according to QSEQ filter<br>  –seed <int>       seed for random number generator (0)<br>  –non-deterministic seed rand. gen. arbitrarily instead of using read attributes<br>  –remove-chrname   remove ‘chr’ from reference names in alignment<br>  –add-chrname      add ‘chr’ to reference names in alignment<br>  –version          print version information and quit<br>  -h&#x2F;–help          print this usage message</p><p>  $hisat2-build<br>No input sequence or sequence file specified!<br>HISAT2 version 2.2.1 by Daehwan Kim (<a href="mailto:&#105;&#110;&#x66;&#112;&#104;&#105;&#x6c;&#x6f;&#64;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#105;&#110;&#x66;&#112;&#104;&#105;&#x6c;&#x6f;&#64;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a>, <a href="http://www.ccb.jhu.edu/people/infphilo">http://www.ccb.jhu.edu/people/infphilo</a>)<br>Usage: hisat2-build [options]* <reference_in> <ht2_index_base><br>    reference_in            comma-separated list of files with ref sequences<br>    hisat2_index_base       write ht2 data to files with this dir&#x2F;basename<br>Options:<br>    -c                      reference sequences given on cmd line (as<br>                            <reference_in>)<br>    –large-index           force generated index to be ‘large’, even if ref<br>                            has fewer than 4 billion nucleotides<br>    -a&#x2F;–noauto             disable automatic -p&#x2F;–bmax&#x2F;–dcv memory-fitting<br>    -p <int>                number of threads<br>    –bmax <int>            max bucket sz for blockwise suffix-array builder<br>    –bmaxdivn <int>        max bucket sz as divisor of ref len (default: 4)<br>    –dcv <int>             diff-cover period for blockwise (default: 1024)<br>    –nodc                  disable diff-cover (algorithm becomes quadratic)<br>    -r&#x2F;–noref              don’t build .3&#x2F;.4.ht2 (packed reference) portion<br>    -3&#x2F;–justref            just build .3&#x2F;.4.ht2 (packed reference) portion<br>    -o&#x2F;–offrate <int>      SA is sampled every 2^offRate BWT chars (default: 5)<br>    -t&#x2F;–ftabchars <int>    # of chars consumed in initial lookup (default: 10)<br>    –localoffrate <int>    SA (local) is sampled every 2^offRate BWT chars (default: 3)<br>    –localftabchars <int>  # of chars consumed in initial lookup in a local index (default: 6)<br>    –snp <path>            SNP file name<br>    –haplotype <path>      haplotype file name<br>    –ss <path>             Splice site file name<br>    –exon <path>           Exon file name<br>    –repeat-ref <path>     Repeat reference file name<br>    –repeat-info <path>    Repeat information file name<br>    –repeat-snp <path>     Repeat snp file name<br>    –repeat-haplotype <path>   Repeat haplotype file name<br>    –seed <int>            seed for random number generator<br>    -q&#x2F;–quiet              disable verbose output (for debugging)<br>    -h&#x2F;–help               print detailed description of tool and its options<br>    –usage                 print this usage message<br>    –version               print version information and quit</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hisat2 rsem 连用</title>
    <link href="https://sqwwww.github.io/wiki/hisat2-rsem-%E8%BF%9E%E7%94%A8/"/>
    <id>https://sqwwww.github.io/wiki/hisat2-rsem-%E8%BF%9E%E7%94%A8/</id>
    <published>2022-07-16T02:19:15.000Z</published>
    <updated>2022-07-16T02:36:38.369Z</updated>
    
    <content type="html"><![CDATA[<p>尝试使用rsem定量hisat2的比对结果，失败了</p><blockquote><p>$rsem-calculate-expression –paired-end –alignments Ha5_Fb2.uniq.bam &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;project&#x2F;seahorse&#x2F;02.ref&#x2F;RsemIndex&#x2F;Ha_Rsem Ha5_Fb2<br>rsem-parse-alignments &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;project&#x2F;seahorse&#x2F;02.ref&#x2F;RsemIndex&#x2F;Ha_Rsem Ha5_Fb2.temp&#x2F;Ha5_Fb2 Ha5_Fb2.stat&#x2F;Ha5_Fb2 Ha5_Fb2.uniq.bam 3 -tag XM<br>Warning: The SAM&#x2F;BAM file declares less reference sequences (168) than RSEM knows (27642)! Please make sure that you aligned your reads against transcript sequences  instead of genome.<br>RSEM can not recognize reference sequence name Chr1!<br>“rsem-parse-alignments &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;project&#x2F;seahorse&#x2F;02.ref&#x2F;RsemIndex&#x2F;Ha_Rsem Ha5_Fb2.temp&#x2F;Ha5_Fb2 Ha5_Fb2.stat&#x2F;Ha5_Fb2 Ha5_Fb2.uniq.bam 3 -tag XM” failed! Plase check if you provide correct parameters&#x2F;options for the pipeline!</p></blockquote><p>原因分析：<br>表面上这个报错是说 hisat2的bam文件跟 Rsem 的索引不兼容。实际上 rsem 不支持 gapped alignment的定量，hisat2在比对过程中使用的就是 gapped alignment，所以两个软件本质上就是不兼容的，不能连用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;尝试使用rsem定量hisat2的比对结果，失败了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$rsem-calculate-expression –paired-end –alignments Ha5_Fb2.uniq.bam &amp;#x2F;public2&amp;#x2F;home</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo/vsCode使用技巧</title>
    <link href="https://sqwwww.github.io/wiki/hexo-vsCode%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://sqwwww.github.io/wiki/hexo-vsCode%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</id>
    <published>2022-07-15T07:39:40.000Z</published>
    <updated>2022-07-15T08:23:34.567Z</updated>
    
    <content type="html"><![CDATA[<p>ctrl+shift+L 选中编辑代码中相同的内容<br>按住Ctrl + Alt，再按键盘上的上或下键，可以使一列上出现多个光标</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ctrl+shift+L 选中编辑代码中相同的内容&lt;br&gt;按住Ctrl + Alt，再按键盘上的上或下键，可以使一列上出现多个光标&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo/hexo_push_error</title>
    <link href="https://sqwwww.github.io/wiki/2/hexo-push-error/"/>
    <id>https://sqwwww.github.io/wiki/2/hexo-push-error/</id>
    <published>2022-07-15T07:31:49.000Z</published>
    <updated>2022-07-16T09:21:01.964Z</updated>
    
    <content type="html"><![CDATA[<p>hexo 向 git 上推送时，报错如下</p><blockquote><p>kex_exchange_identification: read: Connection reset by peer<br>Connection reset by 20.205.243.166 port 22<br>fatal: Could not read from remote repository.</p><p>Please make sure you have the correct access rights<br>and the repository exists.<br>[41mFATAL[49m {<br> err: Error: Spawn failed<br>     at ChildProcess.<anonymous> &gt;(D:\gitpages\node_modules\hexo-util\lib\spawn.js:51:21)<br>     at ChildProcess.emit (node:events:527:28)<br>     at ChildProcess.cp.emit &gt;(D:\gitpages\node_modules\cross-spawn\lib\enoent.js:34:29)<br>     at Process.ChildProcess._handle.onexit (node:internal&#x2F;&gt;child_process:291:12) {<br>   code: 128<br> }<br>} Something’s wrong. Maybe you can find the solution here: %s [4mhttps:&#x2F;&#x2F;&gt;hexo.io&#x2F;docs&#x2F;troubleshooting.html[24m</p></blockquote><p>分析：<br>首先怀疑是本地不能正常连接到 github 所导致,测试连接是否正常</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\gitpages&gt;ssh -T git@github.com</span><br><span class="line">kex_exchange_identification: read: Connection reset</span><br></pre></td></tr></table></figure><p>确实是连接出了问题，尝试解决方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">D:\gitpages&gt;ssh-keygen -R 20.205.243.166</span><br><span class="line"># Host 20.205.243.166 found: line 1</span><br><span class="line">C:\Users\sqw/.ssh/known_hosts updated.</span><br><span class="line">Original contents retained as C:\Users\sqw/.ssh/known_hosts.old</span><br><span class="line">#这里是重新生成了known_host文件</span><br><span class="line"></span><br><span class="line">D:\gitpages&gt;ssh -T git@github.com</span><br><span class="line">The authenticity of host &#x27;github.com (20.205.243.166)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? y</span><br><span class="line">Please type &#x27;yes&#x27;, &#x27;no&#x27; or the fingerprint: yes</span><br><span class="line">Warning: Permanently added &#x27;github.com,20.205.243.166&#x27; (ECDSA) to the list of known hosts.</span><br><span class="line">Hi sqwwww! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">#本地重新把github的指纹加进known host文件里。</span><br></pre></td></tr></table></figure><p>接下来执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>成功推送</p><p>gitpages默认branch是main，但我的主页设置在master，需要把默认branch从main改成master<br>参照这篇 <a href="https://blog.csdn.net/xuchaoxin1375/article/details/111414527">https://blog.csdn.net/xuchaoxin1375/article/details/111414527</a><br>github允许每个仓库的default branch 可以单独设置</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;hexo 向 git 上推送时，报错如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;kex_exchange_identification: read: Connection reset by peer&lt;br&gt;Connection reset by 20.205.243.16</summary>
      
    
    
    
    <category term="2" scheme="https://sqwwww.github.io/categories/2/"/>
    
    
    <category term="bug, hexo, push" scheme="https://sqwwww.github.io/tags/bug-hexo-push/"/>
    
  </entry>
  
</feed>

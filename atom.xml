<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sqw workplace</title>
  
  
  <link href="https://sqwwww.github.io/atom.xml" rel="self"/>
  
  <link href="https://sqwwww.github.io/"/>
  <updated>2022-09-27T03:00:15.044Z</updated>
  <id>https://sqwwww.github.io/</id>
  
  <author>
    <name>sqw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>statisticTest</title>
    <link href="https://sqwwww.github.io/wiki/knowledge/statisticTest/"/>
    <id>https://sqwwww.github.io/wiki/knowledge/statisticTest/</id>
    <published>2022-09-27T02:35:46.000Z</published>
    <updated>2022-09-27T03:00:15.044Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>方差分析 ANOVA<br>1.1 适合性检验<br>检验数据是否符合某一理论分布<br>1.2 独立性检验<br>检验两组数据是否独立</p></li><li><p>多变量方差分析<br>Multivariate analysis of variance (MANOVA) ，一元方差分析的推广<br>有两个或者多个因变量的时候使用</p></li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;方差分析 ANOVA&lt;br&gt;1.1 适合性检验&lt;br&gt;检验数据是否符合某一理论分布&lt;br&gt;1.2 独立性检验&lt;br&gt;检验两组数据是否独立&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多变量方差分析&lt;br&gt;Multivariate analysis of varian</summary>
      
    
    
    
    <category term="knowledge" scheme="https://sqwwww.github.io/categories/knowledge/"/>
    
    
    <category term="statistic, ANOVA, MANOVA" scheme="https://sqwwww.github.io/tags/statistic-ANOVA-MANOVA/"/>
    
  </entry>
  
  <entry>
    <title>paperArrange</title>
    <link href="https://sqwwww.github.io/wiki/knowledge/paperArrange/"/>
    <id>https://sqwwww.github.io/wiki/knowledge/paperArrange/</id>
    <published>2022-09-22T17:52:53.000Z</published>
    <updated>2022-09-28T09:42:57.614Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>2016，nature，LinQiang<br>测了虎尾海马(H.comes)的基因组,探究了海马没有牙齿，没有腹鳍；鉴定了一个pouch 怀孕相关的正在扩张的基因家族（patristacin），是choriolytic enzyme的相关基因</p></li><li><p>2022, molecular Ecology, Olivia Roth<br>做了四个物种(He,Sros,Styp,Noph)，四个时期(None,earl,Late,Part),用了pca，差异基因分析，时序分析来寻找物种差异的基因和时期特异的基因。<br>有一点还挺有趣的。pouched species 免疫相关的基因在早期出现了显著下调，晚期又显著上升；nopouched species则没有这样的规律。这些基因是一些抗原处理和呈递相关的基因。怀孕早期父体免疫反应的下降可能是为了达成immunological tolerance，让胚胎成功进入父体；晚期的上调则有可能是因为，这篇文章里推测是因为晚期的胚胎对父体的营养依赖减少了，不再直接与父体的免疫系统亲密接触；我觉得他说得不正确，越到后期对父体的营养依赖应该更强才对，因为卵黄在前中期逐渐被消耗完了，那么后期免疫反应的增强有可能是因为免疫反应可以试分娩顺利进行；但这个猜想也不完美，毕竟不是在分娩时期出现的下调</p></li><li><p>怀孕过程已经被证明是存在营养传递的<br>2021, Placenta, C.M.Whittington，膨腹怀孕各时期的组织学切片<br> 评估了膨腹海马怀孕时育儿袋之间物质交换的结构支持证据，从pouch inner layer的下列指标来论证<br> 育儿袋inner layer的曲折程度（育儿袋内腔的表面积）在怀孕过程中增加<br> 毛细血管与育儿袋内腔之间的扩散距离在怀孕过程中减少，即随着怀孕的进行，毛细血管越来越靠近胚胎<br> 毛细血管的密度在怀孕过程中增加<br> 这些结构上的显著变化为怀孕过程中父本和胚胎的物质交换提供了结构上的支持，其他基因水平的研究中也发现怀孕过程中血管生成(vasculogenic)和组织重塑(remodelling)的相关基因有明显上调<br>2020, Journal of Comparative Physiology B, Camilla M. Whittington<br> 评估了膨腹海马怀孕时父本和胚胎之间是否存在营养交换，主要看干重和脂质含量这两个指标。newly fertilised eggs 和 neonates相比，干重没有显著变化，脂质含量也没有显著变化。对严格的卵黄营养动物，由于卵黄的消耗，二者都应存在明显的下降。因此从这一方面论证了在胚胎的发育过程中，父本向胚胎传递了营养和脂质。<br> lipid contributed ~88% to Ha neonate dry mass</p></li><li><p>Ha 一次怀孕是，一个繁殖期的不同批次的怀孕可以是</p></li><li><p>MHCII与个体嗅觉有关，参与个体择偶，抑制近亲繁殖</p></li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;2016，nature，LinQiang&lt;br&gt;测了虎尾海马(H.comes)的基因组,探究了海马没有牙齿，没有腹鳍；鉴定了一个pouch 怀孕相关的正在扩张的基因家族（patristacin），是choriolytic enzyme的相关基因&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="knowledge" scheme="https://sqwwww.github.io/categories/knowledge/"/>
    
    
  </entry>
  
  <entry>
    <title>sbatchSystem</title>
    <link href="https://sqwwww.github.io/wiki/codeSkill/sbatchSystem/"/>
    <id>https://sqwwww.github.io/wiki/codeSkill/sbatchSystem/</id>
    <published>2022-09-08T02:01:36.000Z</published>
    <updated>2022-09-27T02:48:53.018Z</updated>
    
    <content type="html"><![CDATA[<p>sinfo查看计算节点空闲状态<br>    idel为空闲，mix为节点部分核心可以使用，alloc为已被占用<br>可以通过squeue查看已经提交作业的排队情况<br>通过scontrol show job 和sacct查询作业的相关信息<br>通过scancel取消已经提交的作业</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;sinfo查看计算节点空闲状态&lt;br&gt;    idel为空闲，mix为节点部分核心可以使用，alloc为已被占用&lt;br&gt;可以通过squeue查看已经提交作业的排队情况&lt;br&gt;通过scontrol show job 和sacct查询作业的相关信息&lt;br&gt;通过scancel取消</summary>
      
    
    
    
    <category term="codeSkill" scheme="https://sqwwww.github.io/categories/codeSkill/"/>
    
    
    <category term="集群" scheme="https://sqwwww.github.io/tags/%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title>pbsSystem</title>
    <link href="https://sqwwww.github.io/wiki/codeSkill/pbsSystem/"/>
    <id>https://sqwwww.github.io/wiki/codeSkill/pbsSystem/</id>
    <published>2022-09-04T14:10:33.000Z</published>
    <updated>2022-09-27T02:49:01.349Z</updated>
    
    <content type="html"><![CDATA[<p>查询自己的id下有哪些任务在运行<br>qstat -au fjnu_edu_hz</p><p>列出分配给此作业的节点<br>qstat -n job_id</p><p>查看节点状态<br>pestat</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;查询自己的id下有哪些任务在运行&lt;br&gt;qstat -au fjnu_edu_hz&lt;/p&gt;
&lt;p&gt;列出分配给此作业的节点&lt;br&gt;qstat -n job_id&lt;/p&gt;
&lt;p&gt;查看节点状态&lt;br&gt;pestat&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot;</summary>
      
    
    
    
    <category term="codeSkill" scheme="https://sqwwww.github.io/categories/codeSkill/"/>
    
    
    <category term="集群" scheme="https://sqwwww.github.io/tags/%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title>repeatMasker</title>
    <link href="https://sqwwww.github.io/wiki/biosoft/repeatMasker/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/repeatMasker/</id>
    <published>2022-09-03T12:01:26.000Z</published>
    <updated>2022-09-06T15:10:11.919Z</updated>
    
    <content type="html"><![CDATA[<p>repeatmasker 的安装：<br>    Python 3<br>    rmblast ~&#x2F;miniconda3&#x2F;envs&#x2F;repeatMask&#x2F;bin&#x2F;rmblastn<br>    trf ~&#x2F;miniconda3&#x2F;envs&#x2F;repeatMask&#x2F;bin&#x2F;trf<br>repeatModeler<br>    &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;miniconda3&#x2F;envs&#x2F;repeat&#x2F;bin&#x2F;perl<br>    &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;biosoft&#x2F;RepeatMasker<br>    &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;miniconda3&#x2F;envs&#x2F;repeat&#x2F;bin<br>    &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;miniconda3&#x2F;envs&#x2F;repeat&#x2F;bin<br>    UCSC TwoBit Tools (twoBitToFa, faToTwoBit, twoBitInfo etc)<br>    cd-hit<br>    recon<br>    repeatscout</p><p>repeatmodeler运行<br>内存需要32G，多核（示例用了28核），一般要跑2-3天</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash -x</span><br><span class="line">#PBS -N mask</span><br><span class="line">#PBS -o mask.log</span><br><span class="line">#PBS -e mask.err</span><br><span class="line">#PBS -q share</span><br><span class="line">#PBS -j oe</span><br><span class="line">#PBS -l nodes=1:ppn=28</span><br><span class="line"></span><br><span class="line">cd $PBS_O_WORKDIR</span><br><span class="line">source activate repeatMask</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#build genome database with name</span><br><span class="line">/public/home/fjnu_edu_hz/qianwei/biosoft/RepeatModeler-2.0.3/BuildDatabase -name Qsp Fhap1.chr.fasta</span><br><span class="line">#perform repeatseq from database</span><br><span class="line">/public/home/fjnu_edu_hz/qianwei/biosoft/RepeatModeler-2.0.3/RepeatModeler -pa 28 -database Qsp</span><br><span class="line">#get ortholog lib of ancestor and descendant species</span><br><span class="line">/public/home/fjnu_edu_hz/qianwei/biosoft/RepeatMasker/famdb.py -i RepeatMaskerLib.h5 families -f embl -ad frogs &gt; frogs.embl</span><br><span class="line">#transform</span><br><span class="line">/public/home/fjnu_edu_hz/qianwei/biosoft/RepeatMasker/util/buildRMLibFromEMBL.pl frogs.embl &gt; frogs.fasta</span><br><span class="line">#merge repeat lib</span><br><span class="line">cat Qsp-families.fa frogs.fasta &gt; Qsp-allrep.fa</span><br><span class="line">#run mask</span><br><span class="line">/public/home/fjnu_edu_hz/qianwei/biosoft/RepeatMasker/RepeatMasker -pa 28 -lib ./Qsp-allrep.fa -e ncbi -dir mask -gff ./Fhap1.chr.fasta</span><br></pre></td></tr></table></figure><h1 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h1><h2 id="repeat-modeler-成功运行应出现如下结果，"><a href="#repeat-modeler-成功运行应出现如下结果，" class="headerlink" title="repeat modeler 成功运行应出现如下结果，"></a>repeat modeler 成功运行应出现如下结果，</h2><blockquote><h1 id="RepeatClassifier-Version-2-0-3"><a href="#RepeatClassifier-Version-2-0-3" class="headerlink" title="RepeatClassifier Version 2.0.3"></a>RepeatClassifier Version 2.0.3</h1><p>Search Engine &#x3D; rmblast</p><ul><li>Looking for Simple and Low Complexity sequences..</li><li>Looking for similarity to known repeat proteins..</li><li>Looking for similarity to known repeat consensi..<br>Classification Time: 01:52:08 (hh:mm:ss) Elapsed Time</li></ul><p>Program Time: 43:21:32 (hh:mm:ss) Elapsed Time<br>Working directory:  &#x2F;public&#x2F;home&#x2F;fjnu_edu_hz&#x2F;qianwei&#x2F;wa&#x2F;mask&#x2F;Fhap1&#x2F;RM_229363.SunSep42308182022<br>may be deleted unless there were problems with the run.</p><p>The results have been saved to:<br>  Qsp-families.fa  - Consensus sequences for each family identified.<br>  Qsp-families.stk - Seed alignments for each family identified.<br>  Qsp-rmod.log     - Execution log.  Useful for reproducing results.</p><p>The RepeatModeler stockholm file is formatted so that it can<br>easily be submitted to the Dfam database.  Please consider contributing<br>curated families to this open database and be a part of this growing<br>community resource.  For more information contact <a href="mailto:&#x68;&#101;&#x6c;&#x70;&#64;&#x64;&#102;&#x61;&#x6d;&#46;&#111;&#x72;&#103;">&#x68;&#101;&#x6c;&#x70;&#64;&#x64;&#102;&#x61;&#x6d;&#46;&#111;&#x72;&#103;</a>.</p></blockquote><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;repeatmasker 的安装：&lt;br&gt;    Python 3&lt;br&gt;    rmblast ~&amp;#x2F;miniconda3&amp;#x2F;envs&amp;#x2F;repeatMask&amp;#x2F;bin&amp;#x2F;rmblastn&lt;br&gt;    trf ~&amp;#x2F;min</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
  <entry>
    <title>pregnancy</title>
    <link href="https://sqwwww.github.io/wiki/knowledge/pregnancy/"/>
    <id>https://sqwwww.github.io/wiki/knowledge/pregnancy/</id>
    <published>2022-09-03T06:25:54.000Z</published>
    <updated>2022-09-24T04:08:12.443Z</updated>
    
    <content type="html"><![CDATA[<p>labour is a complex biological progress that in female pregnant animal is controled by hormones including oxytocin(催产素), which can induce contractions of smooth muscles in uterus.<br>In female mammals, the uterine wall contains abundant smooth muscle, oxytocin stimulates this smooth muscle to contract, helping bringing the labour.</p><p>when unpregnant male seahorses were exposed to fish version oxytocin(isotocin), they expressed labour-like behaviours.so it’s speculated that seahorse would use oxytocin-family hormones to control the process of giving birth. female mammals usually use smooth muscles to control the giving birth, but in male seahorse, the small smooth muscle bundles were only found to scattered in the out layer of pouch. </p><p>the large skleton muscle associated with anal fin could control the opening of pouch under the regulatory of oxytocin-family hormones<br>(<a href="https://www.abc.net.au/news/2022-09-02/seahorse-dad-father-give-birth-pregnant/101400086">https://www.abc.net.au/news/2022-09-02/seahorse-dad-father-give-birth-pregnant/101400086</a>)<br>muscle type<br>    smooth muscle<br>    skeletal muscle<br>    cardiac muscle</p><p>decidua 蜕膜<br>孕妇的子宫内膜，胚胎植入子宫蜕膜后，蜕膜可以分为三部分，位于胚胎深部的叫做基蜕膜（decidua strama），包被在胚胎表面的叫做包蜕膜，其余部分称壁蜕膜，其中基蜕膜参与构成胎盘，包蜕膜和壁蜕膜组成包衣的一部分。胎儿分娩时，蜕膜随从胎盘和包衣排出。</p><p>endometrium 子宫内膜<br>During pregnancy, the endometrium becomes a specialized tissue(named decidua) with strikingly high proportion of leukocytes with unique regulatory function.Two major population are decidua macrophages and regulatory T cells, which plays important role in establishing tolerance and maintaining the homeostatic enviroment that is cruial for normal fetal development</p><p>滋养层 trophoblast<br>哺乳动物早期胚泡壁的单层细胞所形成的薄膜，为以后从母体中摄取胎儿营养而得名</p><p>attachment phase，在真兽类和有袋类中都存在，在有袋类中，胚胎attachment会引起炎症反应，炎症反应被认为介导了最后的分娩<br>eutherian implantation: establishment of a stable fetal-maternal interface, 在许多真兽类动物中，胚胎定植(embryo implantation)通常伴随着子宫(uterus)的炎症反应(inflammatory reaction),其中有些炎症反应对胚胎的成功定植是必要的。此时炎症反应在怀孕中的作用与在有袋类中是相反的，在有袋类中引起分娩，在真兽类中有利于定植。<br>在真兽类中，胚胎定植的过程抑制了一类特定的炎症反应, 促炎(proinflammatory)细胞因子(cytokine) IL17A介导的 中性粒细胞(neutrophil)的招募(recruitment)，DSC(蜕膜基质)的分泌物可以抑制TH17 cells产生IL17A</p><p>炎症反应<br>损伤的细胞分泌炎症细胞因子，炎症细胞因子（cytokine）诱导体内的炎症相关反应<br>前列腺素（prostaglandins）在免疫反应中起着相当重要的作用</p><p>embryo retention<br>embryo retention 与胎生的进化非常相关。由于embryo retention 时间的不同，卵生动物在产卵（oviposition）时胚胎所处的时期也不同，retention的时间越久，胚胎发育的越成熟，可能处于的时期有 囊胚期blastula，原肠期gastrula，神经胚期后post-neurula embryo，完全成熟期viviparity</p><p>allantois 尿囊<br>进行气体交换，存储代谢废物，一般形成在chorion和amnion之间</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;labour is a complex biological progress that in female pregnant animal is controled by hormones including oxytocin(催产素), which can induce</summary>
      
    
    
    
    <category term="knowledge" scheme="https://sqwwww.github.io/categories/knowledge/"/>
    
    
    <category term="paperReading, teacher" scheme="https://sqwwww.github.io/tags/paperReading-teacher/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://sqwwww.github.io/wiki/pipeline/RNA%E6%B5%81%E7%A8%8B/"/>
    <id>https://sqwwww.github.io/wiki/pipeline/RNA%E6%B5%81%E7%A8%8B/</id>
    <published>2022-09-03T02:52:42.023Z</published>
    <updated>2022-07-23T14:28:15.486Z</updated>
    
    
    
    
    <category term="pipeline" scheme="https://sqwwww.github.io/categories/pipeline/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://sqwwww.github.io/wiki/biosoft/error/errorRecord/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/error/errorRecord/</id>
    <published>2022-09-03T02:52:42.020Z</published>
    <updated>2022-08-05T08:30:35.911Z</updated>
    
    <content type="html"><![CDATA[<p>vcftools</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[W::bcf_hdr_check_sanity] GL should be declared as Number=G</span><br><span class="line">[W::vcf_parse] Contig &#x27;Chr0_RagTag&#x27; is not defined in the header. (Quick workaround: index the file with tabix.)</span><br><span class="line">[W::vcf_parse] Contig &#x27;ctg102_pilon_pilon_RagTag&#x27; is not defined in the header. (Quick workaround: index the file with tabix.)</span><br><span class="line"></span><br><span class="line">Warning: Expected at least 2 parts in INFO entry: ID=Source,Number=.,Type=String,Description=&quot;Was this variant suggested by Playtypus, Assembler, or from a VCF?&quot;&gt;</span><br></pre></td></tr></table></figure><p>这两个warning好像都可以忽略。暂时不处理了<br>如果运行 bcftools 出现如下错误，说明需要对 vcf 创建索引文件<br>tabix -fp vcf XXX.vcf.gz</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vcftools&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    <category term="error" scheme="https://sqwwww.github.io/categories/biosoft/error/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sqwwww.github.io/wiki/tmp/hello-world/"/>
    <id>https://sqwwww.github.io/wiki/tmp/hello-world/</id>
    <published>2022-09-03T02:52:42.017Z</published>
    <updated>2022-07-15T04:43:55.097Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="tmp" scheme="https://sqwwww.github.io/categories/tmp/"/>
    
    
  </entry>
  
  <entry>
    <title>bwa</title>
    <link href="https://sqwwww.github.io/wiki/biosoft/bwa/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/bwa/</id>
    <published>2022-08-13T05:43:13.000Z</published>
    <updated>2022-08-13T15:26:22.832Z</updated>
    
    <content type="html"><![CDATA[<p>bwa index [ –p prefix ] &lt;in.db.fasta&gt;</p><p>bwa mem -t 25 $genome $read1 $read2  |  samtools sort -@ 10 -m 3G -O BAM -o $genome.$sample.sorted.bam  -</p><p>samtools index $genome.$sample.sorted.bam</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;bwa index [ –p prefix ] &amp;lt;in.db.fasta&amp;gt;&lt;/p&gt;
&lt;p&gt;bwa mem -t 25 $genome $read1 $read2  |  samtools sort -@ 10 -m 3G -O BAM -o $genome.$s</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
  <entry>
    <title>genoPlotR</title>
    <link href="https://sqwwww.github.io/wiki/codeSkill/genoPlotR/"/>
    <id>https://sqwwww.github.io/wiki/codeSkill/genoPlotR/</id>
    <published>2022-08-12T08:17:54.000Z</published>
    <updated>2022-09-27T02:49:16.677Z</updated>
    
    <content type="html"><![CDATA[<p>genoPlotR是用来展示基因组结构的R包</p><p>基础的结构绘制</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;genoPlotR是用来展示基因组结构的R包&lt;/p&gt;
&lt;p&gt;基础的结构绘制&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;l</summary>
      
    
    
    
    <category term="codeSkill" scheme="https://sqwwww.github.io/categories/codeSkill/"/>
    
    
  </entry>
  
  <entry>
    <title>lipidDroplet</title>
    <link href="https://sqwwww.github.io/wiki/knowledge/lipidDroplet/"/>
    <id>https://sqwwww.github.io/wiki/knowledge/lipidDroplet/</id>
    <published>2022-08-08T03:16:50.000Z</published>
    <updated>2022-08-09T10:25:06.943Z</updated>
    
    <content type="html"><![CDATA[<p>lipid droplet biology</p><p>lipid是什么<br>最主要的能量储存形式<br>以甘油三酯（最主要），兹醇酯，蜡酯等形式存储<br>用作能量储存的优点：能量密度高；高度还原，可用于氧化；存储过程不需要水的参与</p><p>lipid droplet是什么<br>是一种存储油脂的细胞器，磷脂单分子层外膜，中间包裹着中性的脂质核心，脂质核心中通常含有甘油三酯（最主要），兹醇酯，蜡酯等；磷脂单分子层外膜通常被蛋白修饰，这些蛋白一般会参加脂质的代谢过程</p><p>lipid droplet 与细胞质<br>脂滴在细胞质中以小液滴的形式存在，形成乳浊液，连续相是胞浆，分散相是脂滴。</p><p>lipid droplet 在多细胞动物中的分布<br>ubiquitous，在人中，几乎所有细胞都能合成脂滴；但是脂质的存储主要在脂肪组织（adipose tissue）中。</p><p>脂滴的分泌<br>乳腺上皮细胞分泌牛奶（牛奶含有大量脂肪），就存在大量的脂滴分泌过程</p><p>脂滴的合成<br>脂滴合成通路<br>    合成甘油三酯: DGAT（ER表面），合成的甘油三酯被输送到ER的磷脂双分子层中间的空腔<br>    脂滴在ER上合成的起始阶段: seipin（ER表面）,LPAF1(ER表面，脂滴表面)，合成的甘油三酯在ER特定位置堆积，靠近胞质的磷脂层隆起，出芽，直至脂滴与内质网分离，LPAF1在这一过程中也从内质网表面进入到脂滴表面。<br>    脂滴与ER分离，并招募表面蛋白：两种途径，从细胞质中招募；从内质网上招募（GPAT4）<br>    脂滴进一步生长成熟</p><p>perlin 蛋白：<br>    合成于游离核糖体<br>    mammal中含有5种perilipin蛋白，Perilipins 2 and 3在所有组织中都表达，145具有组织特异性。teleost中含有4种perilipin蛋白，其中perilipin6是teleost特有的。皮肤黄色素细胞（xanthophores）中含有包裹类胡萝卜素的脂滴，perilipin6就集中在这一类脂滴上，促进相关色素的聚集和浓度提高，与鱼的体色相关。哺乳动物中包裹视黄醇（维生素A，可以由胡萝卜素转变而成）的脂滴表面富集perilipin2和3。<br>    鱼类具备6种起源于神经嵴（Neural crest）的色素细胞，分别为黑色素细胞（Melanophores）、黄色素细胞（Xanthophores）、红色素细胞（Erythrophores）、彩虹细胞（Iridophores），白色素细胞（Leucophores）和蓝色素细胞（Cyanophores）。哺乳类和鸟类仅含有1种神经嵴起源的色素细胞类型，即黑素细胞（Melanocytes）。鱼类色素细胞主要存在于表皮的真皮中，其中黑色素细胞、黄色素细胞、红色素细胞和蓝色素细胞含有相应的色素物质。<br>    所有硬骨鱼类的色素细胞均起源于胚胎时期外胚层的神经嵴细胞群，由一小组神经嵴细胞群首先形成色素母细胞（Chromatoblasts），随着发育的进行，再分化为黑色素细胞、黄色素细胞和彩虹色素细胞等其他色素细胞，在色素细胞到达一定的数量，开始色素模式的形成，也就是我们看到的成体鱼类所具有的典型的条纹和色素斑点。</p><pre><code>plin6在斑马鱼的胚胎发育时期可以检测到表达，在成年个体的皮肤上高表达正常情况下，未磷酸化的perilipin蛋白包裹在脂滴表面，阻碍脂质降解蛋白接触到脂滴内的脂质，从而使脂滴的的脂质可以存储下来；当perilipin蛋白处于激发态的时候（被PKA磷酸化），HSL（脂肪酶）与磷酸化的perilipin共定位于脂滴表面，HSL更容易接触到脂滴内的脂质，从而发挥脂解作用。HSL是水解甘油三酯的脂肪酶，非活化状态的HSL存在于细胞质中</code></pre><p>脂质如何通过胎盘<br>    正常情况下脂质很难通过胎盘，甘油三脂不能通过扩散进入细胞，但可以以两种方式进入胎盘，为胎儿提供营养<br>        1. 脂质与蛋白结合形成脂蛋白，胎盘上有脂蛋白的受体，可以把脂蛋白转运进胎盘。<br>        2. 脂肪酸可以通过自由扩散进入胎盘，这就需要母体有比较高的脂肪酸浓度。</p><p>特殊情况：乳腺上皮可以分泌脂滴</p><p>lipoprotein脂蛋白和lipid droplet脂滴是一个东西吗<br>    不是，二者结构上比较相似，都是由中性脂质内核和磷脂单分子外膜构成，外膜上存在蛋白。但是不同点如下：大小不同，脂滴（100nm - 100 um）比脂蛋白（20-500 nm）要大很多；功能不同，脂滴主要用做细胞内脂质的储存，脂蛋白主要用作脂质在血液中的运输，因此二者表面的蛋白种类差异也很大。几乎所有的细胞都能合成脂滴，但只有少部分的细胞类型可以合成脂蛋白组装需要的特殊蛋白（比如载脂蛋白apoB，apolipoprotein B 和microsomal TG transfer protein）</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;lipid droplet biology&lt;/p&gt;
&lt;p&gt;lipid是什么&lt;br&gt;最主要的能量储存形式&lt;br&gt;以甘油三酯（最主要），兹醇酯，蜡酯等形式存储&lt;br&gt;用作能量储存的优点：能量密度高；高度还原，可用于氧化；存储过程不需要水的参与&lt;/p&gt;
&lt;p&gt;lipid drop</summary>
      
    
    
    
    <category term="knowledge" scheme="https://sqwwww.github.io/categories/knowledge/"/>
    
    
  </entry>
  
  <entry>
    <title>blast</title>
    <link href="https://sqwwww.github.io/wiki/biosoft/blast/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/blast/</id>
    <published>2022-08-07T10:12:35.000Z</published>
    <updated>2022-08-16T16:59:57.815Z</updated>
    
    <content type="html"><![CDATA[<p>pep_fa&#x3D;Habd.faa<br>makeblastdb -in $pep_fa -dbtype prot -out blastIndex&#x2F;Ha_pep</p><p>blastp -query $qry_fa -out $out_name -db $index -outfmt 6 -evalue 1e-5 -num_threads 11 -max_target_seqs 6</p><p>tblastn -query $qry_fa -out $out_name -db $index -outfmt 6 -evalue 1e-5 -num_threads 11 -max_target_seqs 1<br>blastp输出结果<br>    qseqid query (e.g., unknown gene) sequence id<br>    sseqid subject (e.g., reference genome) sequence id<br>    pident percentage of identical matches<br>    length alignment length (sequence overlap)<br>    mismatch number of mismatches<br>    gapopen number of gap openings<br>    qstart start of alignment in query<br>    qend end of alignment in query<br>    sstart start of alignment in subject<br>    send end of alignment in subject<br>    evalue expect value<br>    bitscore bit score</p><p>blast 参数详细<br>如果只想取query的最优比对，设置 -max_target_seqs 1；自我比对的时候只会得到原始序列<br>想要每个query-subject的唯一最优对应，设置 -max_target_seqs 500 -max_hsps 1</p><p>blastdbcmd 从blast构建好的数据库中提取序列</p><p>blat<br>ref_fa&#x3D;<br>qry_fa&#x3D;<br>out_name&#x3D;<br>blat -t&#x3D;dna -q&#x3D;dna $ref_fa $qry_fa $out_name</p><p>nucmer</p><p>nucmer -p $1_$2 $ref $query<br>nucmer fhap1_chr1.fa fhap2_chr1.fa &amp;&gt; fhap12.log<br>&#x2F;public&#x2F;home&#x2F;Zexian&#x2F;mummer3&#x2F;MUMmer3.23&#x2F;delta-filter -1 out.delta &gt; filter.delta</p><p>&#x2F;public&#x2F;home&#x2F;Zexian&#x2F;mummer3&#x2F;MUMmer3.23&#x2F;show-coords -T -q -H filter.delta &gt; XR_coord.txt</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pep_fa&amp;#x3D;Habd.faa&lt;br&gt;makeblastdb -in $pep_fa -dbtype prot -out blastIndex&amp;#x2F;Ha_pep&lt;/p&gt;
&lt;p&gt;blastp -query $qry_fa -out $out_name -db </summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
  <entry>
    <title>fish</title>
    <link href="https://sqwwww.github.io/wiki/knowledge/fish/"/>
    <id>https://sqwwww.github.io/wiki/knowledge/fish/</id>
    <published>2022-08-05T08:30:12.000Z</published>
    <updated>2022-08-06T15:52:19.716Z</updated>
    
    <content type="html"><![CDATA[<p>脊椎动物亚门vertebrate<br>    圆口纲<br>    软骨鱼纲<br>    硬骨鱼纲<br>    两栖纲<br>    爬行纲<br>    鸟纲<br>    哺乳纲</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;脊椎动物亚门vertebrate&lt;br&gt;    圆口纲&lt;br&gt;    软骨鱼纲&lt;br&gt;    硬骨鱼纲&lt;br&gt;    两栖纲&lt;br&gt;    爬行纲&lt;br&gt;    鸟纲&lt;br&gt;    哺乳纲&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;h</summary>
      
    
    
    
    <category term="knowledge" scheme="https://sqwwww.github.io/categories/knowledge/"/>
    
    
  </entry>
  
  <entry>
    <title>fastq-dump</title>
    <link href="https://sqwwww.github.io/wiki/biosoft/fastq-dump/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/fastq-dump/</id>
    <published>2022-07-30T15:54:51.000Z</published>
    <updated>2022-08-08T03:21:21.032Z</updated>
    
    <content type="html"><![CDATA[<p>fastq-dump –gzip –split-3 SRR12601728.sra，用了两个小时，真慢<br>–split-3智能检测是单端还是双端的reads<br>fastqc查看是否为clean reads</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;fastq-dump –gzip –split-3 SRR12601728.sra，用了两个小时，真慢&lt;br&gt;–split-3智能检测是单端还是双端的reads&lt;br&gt;fastqc查看是否为clean reads&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
  <entry>
    <title>coverage_pipeline</title>
    <link href="https://sqwwww.github.io/wiki/pipeline/coverage-pipeline/"/>
    <id>https://sqwwww.github.io/wiki/pipeline/coverage-pipeline/</id>
    <published>2022-07-28T09:45:49.000Z</published>
    <updated>2022-08-08T03:17:59.158Z</updated>
    
    <content type="html"><![CDATA[<p>从bam文件到coverage<br>sambamba depth window –overlap 2500 -w 5000 -o female_Mhap1_depth.txt -t 28 -q&#x3D;30 $bam</p><p>得到用来做normalise的depth</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">file=$1</span><br><span class="line">samtools stats $file &gt; $&#123;file&#125;_temp</span><br><span class="line">number=$(grep ^COV $&#123;file&#125;_temp | cut -f 2- | awk -v max=0 &#x27;&#123;if($3&gt;max)&#123;want=$2; max=$3&#125;&#125;END&#123;print want&#125; &#x27; -)</span><br><span class="line">rm $&#123;file&#125;_temp</span><br><span class="line">echo $file $number &gt; $&#123;file&#125;_modal_depth.txt</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从bam文件到coverage&lt;br&gt;sambamba depth window –overlap 2500 -w 5000 -o female_Mhap1_depth.txt -t 28 -q&amp;#x3D;30 $bam&lt;/p&gt;
&lt;p&gt;得到用来做normalise的dept</summary>
      
    
    
    
    <category term="pipeline" scheme="https://sqwwww.github.io/categories/pipeline/"/>
    
    
  </entry>
  
  <entry>
    <title>R</title>
    <link href="https://sqwwww.github.io/wiki/codeSkill/R/"/>
    <id>https://sqwwww.github.io/wiki/codeSkill/R/</id>
    <published>2022-07-25T04:40:17.000Z</published>
    <updated>2022-08-17T07:59:24.165Z</updated>
    
    <content type="html"><![CDATA[<p>data.table<br>    赋值<br>    df_combined[,’:&#x3D;’(‘1_2’ &#x3D; sub1 &gt; sub2, ‘1_3’ &#x3D; sub1 &gt; sub3, ‘1_4’ &#x3D; sub1 &gt; sub4, ‘1_5’ &#x3D; sub1&gt; sub5,<br>                    ‘2_3’ &#x3D; sub2&gt;sub3, ‘2_4’&#x3D; sub2&gt;sub4,’2_5’&#x3D; sub2&gt;sub5,<br>                    ‘3_4’&#x3D;sub3&gt;sub4, ‘3_5’&#x3D;sub3&gt;sub5,<br>                    ‘4_5’&#x3D;sub4&gt;sub5)]<br>    DT[i, c(“LHS1”, “LHS2”) :&#x3D; list(RHS1, RHS2), by &#x3D; …]</p><pre><code>window变regionmyWindow[order(CN, S,E),         g := .(cumsum(c(0L,(shift(S, -1) &gt; cummax(E))[-.N]))),by = CN]myRegion &lt;- myWindow[order(CN,S,E),.(NS = min(S), NE = max(E), num = .N, log = mean(log2MFR)),                    by = .(CN, g)]df_combined_filtered[order(CHROM, BIN_START,BIN_END),         g := .(cumsum(c(0L,(shift(BIN_START, -1) &gt; cummax(BIN_END))[-.N]))),by = CHROM]myRegion &lt;- df_combined_filtered[order(CHROM, BIN_START,BIN_END),.(NS = min(S), NE = max(E), num = .N,                    by = .(CHROM, g)]根据向量选取列（select multiple columns using a character vector）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">columns &lt;- c(&#x27;mpg&#x27;, &#x27;cyl&#x27;, &#x27;disp&#x27;)</span><br><span class="line">mtcars_dt[, columns, with=FALSE]</span><br><span class="line">mtcars_dt[, .(mpg, cyl, gear)]</span><br><span class="line"></span><br></pre></td></tr></table></figure>对某一列重命名setnames(tmp_data, &quot;gene_id&quot;, current_sampleID)Pitching[ , .SD, .SDcols = c(&#39;W&#39;, &#39;L&#39;, &#39;G&#39;)]DT[i, c(&quot;LHS1&quot;, &quot;LHS2&quot;) := list(RHS1, RHS2), by = ...]填补NAreplace_na(df$X1,5) # 把df的X1列中的NA填充为5改变列的数据类型mRNA_gff[, V3:= lapply(V3, as.numeric)]setkey和setkeyv用来对data table 进行排序，setkey是根据一列排，setkeyv可以根据多列排<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">    a &lt;- fread(file = paste0(&quot;../published/NC21/&quot;,samp,&quot;_depth.txt&quot;))</span><br><span class="line">    setnames(a, &quot;# chrom&quot;, &quot;chrom&quot;)</span><br><span class="line">    setnames(a, &quot;meanCoverage&quot;, &quot;samp&quot;)</span><br><span class="line">    tmp_1 &lt;- a[,.(chrom,chromStart,chromEnd, samp)]</span><br><span class="line">    setkeyv(tmp_1, c(&quot;chrom&quot;,&quot;chromStart&quot;,&quot;chromEnd&quot;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dylyr</span><br><span class="line">filter</span><br><span class="line">raw_ortho %&gt;% filter_all(all_vars(. != &quot;N&quot;))</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(name, sleep_total) %&gt;% </span><br><span class="line">  filter(between(sleep_total, 16, 18))</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(name, sleep_total) %&gt;% </span><br><span class="line">  filter(near(sleep_total, 17, tol = sd(sleep_total)))</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(order, name, sleep_total) %&gt;% </span><br><span class="line">  filter(order %in% c(&quot;Didelphimorphia&quot;, &quot;Diprotodontia&quot;))</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(order, name, sleep_total) %&gt;% </span><br><span class="line">  filter(!order %in% remove)</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(name, sleep_total) %&gt;% </span><br><span class="line">  filter(str_detect(tolower(name), pattern = &quot;mouse&quot;)) #filter(grepl(pattern=&quot;mouse&quot;, tolower(name)))</span><br><span class="line"></span><br><span class="line">filter(condition1, condition2)</span><br><span class="line">filter(condition1, !condition2)</span><br><span class="line">filter(condition1 | condition2) # return rows where condition 1 and/or condition 2 is met.</span><br><span class="line">filter(xor(condition1, condition2) # return all rows where only one of the conditions is met, and not when both conditions are met.</span><br><span class="line"></span><br><span class="line"># 删除某一列含有NA的行</span><br><span class="line">msleep %&gt;% </span><br><span class="line">  select(name, conservation:sleep_cycle) %&gt;% </span><br><span class="line">  filter(!is.na(conservation))</span><br><span class="line"></span><br><span class="line">#根据多列进行过滤</span><br><span class="line">    filter_all() will filter all columns based on your further instructions</span><br><span class="line">    filter_if() requires a function that returns a boolean to indicate which columns to filter on. If that is true, the filter instructions will be followed for those columns.</span><br><span class="line">    filter_at() requires you to specify columns inside a vars() argument for which the filtering will be done.</span><br><span class="line"></span><br><span class="line">    any_vars() statement is equivalent to OR</span><br><span class="line">    all_vars() statement is equivalent to AND</span><br><span class="line"></span><br><span class="line">    msleep %&gt;% </span><br><span class="line">        select(name:order, sleep_total, -vore) %&gt;% </span><br><span class="line">        filter_all(any_vars(str_detect(., pattern = &quot;Ca&quot;)))</span><br><span class="line"></span><br><span class="line">    msleep %&gt;%  </span><br><span class="line">        select(name, sleep_total:bodywt) %&gt;% </span><br><span class="line">        filter_all(any_vars(. &lt; 0.1))</span><br><span class="line"></span><br><span class="line">    msleep %&gt;% </span><br><span class="line">        select(name:order, sleep_total:sleep_rem) %&gt;% </span><br><span class="line">        filter_if(is.character, any_vars(is.na(.))) # is.numeric, is.integer, is.double, is.logical, is.factor</span><br><span class="line"></span><br><span class="line">    msleep %&gt;% </span><br><span class="line">        select(name, sleep_total:sleep_rem, brainwt:bodywt) %&gt;% </span><br><span class="line">        filter_at(vars(sleep_total, sleep_rem), all_vars(.&gt;5)) #all_vars() if all columns need to return TRUE (AND equivalent)</span><br><span class="line">    # you can just select columns to which the change should happen via the vars()</span><br><span class="line">    msleep %&gt;% </span><br><span class="line">        select(name, sleep_total:sleep_rem, brainwt:bodywt) %&gt;% </span><br><span class="line">        filter_at(vars(contains(&quot;sleep&quot;)), all_vars(.&gt;5)) #any_vars() in case just one variable needs to return TRUE (OR equivalent)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;data.table&lt;br&gt;    赋值&lt;br&gt;    df_combined[,’:&amp;#x3D;’(‘1_2’ &amp;#x3D; sub1 &amp;gt; sub2, ‘1_3’ &amp;#x3D; sub1 &amp;gt; sub3, ‘1_4’ &amp;#x3D; sub1 &amp;gt; sub4,</summary>
      
    
    
    
    <category term="codeSkill" scheme="https://sqwwww.github.io/categories/codeSkill/"/>
    
    
  </entry>
  
  <entry>
    <title>data.table用法</title>
    <link href="https://sqwwww.github.io/wiki/codeSkill/shell%E6%8A%80%E5%B7%A7/"/>
    <id>https://sqwwww.github.io/wiki/codeSkill/shell%E6%8A%80%E5%B7%A7/</id>
    <published>2022-07-25T04:40:17.000Z</published>
    <updated>2022-09-27T02:48:06.759Z</updated>
    
    <content type="html"><![CDATA[<p>加法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i=0</span><br><span class="line">let &#x27;i+=1&#x27;</span><br><span class="line"></span><br><span class="line">echo &#x27;scale=2;2+3&#x27; | bc</span><br></pre></td></tr></table></figure><p>if 语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [-e filename]</span><br><span class="line"></span><br><span class="line">for 语句</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关联数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">declare -A ass_array # 声明</span><br><span class="line">ass_array=([&quot;PE&quot;]=0 [&quot;PM&quot;]=0 [&quot;PL&quot;]=0 [&quot;PN&quot;]=0 [&quot;PB&quot;]=0) # 初始化</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat ../../published/mbe_15/phenotype.txt |while read id; do </span><br><span class="line"></span><br><span class="line">srr=`echo $id|awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">pheno=`echo $id|awk &#x27;&#123;print $NF&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">fq1=/public2/home/qianwei/project/seahorse/published/mbe_15/$srr/$&#123;srr&#125;_1.fastq.gz</span><br><span class="line">fq2=/public2/home/qianwei/project/seahorse/published/mbe_15/$srr/$&#123;srr&#125;_2.fastq.gz</span><br><span class="line"></span><br><span class="line">let &#x27;ass_array[$pheno]+=1&#x27; # 赋值 加法</span><br><span class="line">#echo $pheno $&#123;ass_array[$pheno]&#125;</span><br><span class="line">fq11=Ha$&#123;pheno&#125;_MPL$&#123;ass_array[$pheno]&#125;_raw_1.fastq.gz</span><br><span class="line">fq22=Ha$&#123;pheno&#125;_MPL$&#123;ass_array[$pheno]&#125;_raw_2.fastq.gz</span><br><span class="line">#echo $fq11</span><br><span class="line">ln -s $fq1 $fq11</span><br><span class="line">ln -s $fq2 $fq22</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#从软链接拷贝软链接（默认拷贝文件）,用-d选项</span><br><span class="line">ln -s $source link_file</span><br><span class="line">cp -d link_file $new_dir</span><br><span class="line"># 从文件拷贝软链接，用 -s 选项</span><br><span class="line">cp -s $source link_file</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>find,xargs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 按时间查找, find . &#123;-atime/-ctime/-mtime/-amin/-cmin/-mmin&#125; [-/+]num</span><br><span class="line">-1 一天内</span><br><span class="line">+1 一天前</span><br><span class="line"># 按名称查找 -name 参数</span><br><span class="line"># xargs传递参数，-i选项，可以把参数传递给&#123;&#125;</span><br><span class="line">find ../final_fq -mtime -1 -name &quot;Ha*&quot; | xargs -i cp -d &#123;&#125; ./</span><br><span class="line"></span><br><span class="line"># 显示link文件</span><br><span class="line">find /path -type l</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>加法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i=0</span><br><span class="line">let &#x27;i+=1&#x27;</span><br><span class="line"></span><br><span class="line">ratio=`echo &quot;scale=2;$&#123;sample1_cov&#125; / $&#123;sample2_cov&#125;&quot;|bc`;echo $ratio;</span><br></pre></td></tr></table></figure><p>查看文件是否存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;加法&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;</summary>
      
    
    
    
    <category term="codeSkill" scheme="https://sqwwww.github.io/categories/codeSkill/"/>
    
    
  </entry>
  
  <entry>
    <title>ragtag使用</title>
    <link href="https://sqwwww.github.io/wiki/biosoft/ragtag%E4%BD%BF%E7%94%A8/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/ragtag%E4%BD%BF%E7%94%A8/</id>
    <published>2022-07-18T15:54:44.000Z</published>
    <updated>2022-07-21T02:14:05.623Z</updated>
    
    <content type="html"><![CDATA[<p>ragtag.py scaffold &lt;reference.fa&gt; &lt;query.fa&gt;</p><p>scaffolding options:<br>  -e &lt;exclude.txt&gt;     list of reference sequences to ignore [null]<br>  -j &lt;skip.txt&gt;        list of query sequences to leave unplaced [null]<br>  -J &lt;hard-skip.txt&gt;   list of query headers to leave unplaced and exclude from ‘chr0’ (‘-C’) [null]<br>  -f INT               minimum unique alignment length [1000]<br>  –remove-small       remove unique alignments shorter than ‘-f’<br>  -q INT               minimum mapq (NA for Nucmer alignments) [10]<br>  -d INT               maximum alignment merge distance [100000]<br>  -i FLOAT             minimum grouping confidence score [0.2]<br>  -a FLOAT             minimum location confidence score [0.0]<br>  -s FLOAT             minimum orientation confidence score [0.0]<br>  -C                   concatenate unplaced contigs and make ‘chr0’<br>  -r                   infer gap sizes. if not, all gaps are 100 bp<br>  -g INT               minimum inferred gap size [100]<br>  -m INT               maximum inferred gap size [100000]</p><p>input&#x2F;output options:<br>  -o PATH              output directory [.&#x2F;ragtag_output]<br>  -w                   overwrite intermediate files<br>  -u                   add suffix to unplaced sequence headers</p><p>mapping options:<br>  -t INT               number of minimap2&#x2F;unimap threads [1]<br>  –aligner PATH       aligner executable (‘nucmer’, ‘unimap’ or ‘minimap2’) [minimap2]<br>  –mm2-params STR     space delimited minimap2 parameters (overrides ‘-t’) [‘-x asm5’]<br>  –unimap-params STR  space delimited unimap parameters (overrides ‘-t’) [‘-x asm5’]<br>  –nucmer-params STR  space delimted nucmer parameters [‘–maxmatch -l 100 -c 500’]</p><p>-C会将没地方放的contig&#x2F;scaffold连在一起放到chr0中（中间用100个N连接）</p><p>ragtag.py scaffold -u $ref $query -t 20 -C</p><p>cd ~&#x2F;project&#x2F;seahorse&#x2F;published&#x2F;assembly&#x2F;ragtag<br>bash ragtag.sh &amp;&gt; He_log</p><p>cd ~&#x2F;project&#x2F;seahorse&#x2F;published&#x2F;assembly&#x2F;map&#x2F;ref<br>ln -s &#x2F;public2&#x2F;home&#x2F;qianwei&#x2F;project&#x2F;seahorse&#x2F;published&#x2F;assembly&#x2F;ragtag&#x2F;ragtag_output_He&#x2F;ragtag.scaffold.fasta subelongatus.fa<br>bash bowtie2Index.sh &amp;&gt; sub_build.log<br>cd ..<br>bash DNApipeline.sh &amp;&gt; sub.map.log</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ragtag.py scaffold &amp;lt;reference.fa&amp;gt; &amp;lt;query.fa&amp;gt;&lt;/p&gt;
&lt;p&gt;scaffolding options:&lt;br&gt;  -e &amp;lt;exclude.txt&amp;gt;     list of reference se</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
  <entry>
    <title>bowtieAndBowtie2</title>
    <link href="https://sqwwww.github.io/wiki/biosoft/bowtieAndBowtie2/"/>
    <id>https://sqwwww.github.io/wiki/biosoft/bowtieAndBowtie2/</id>
    <published>2022-07-16T09:01:36.000Z</published>
    <updated>2022-07-21T02:14:19.904Z</updated>
    
    <content type="html"><![CDATA[<p>bowtie和bowtie2的区别<br>这两个软件都适合DNA的比对，bowtie开发的比较早，适合短reads（50bp）的比对，bowtie2适合长一点的reads（150bp）的比对，现在的数据基本上都适合用bowtie2</p><p>bowtie2 如何选择 uniq mapping 的 reads</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;AS:&quot; aligned.sam | grep -v &quot;XS:i&quot;</span><br></pre></td></tr></table></figure><p>hisat比的话 grep “NH:i:1” aligned.sam | grep -v “ZS:i” </p><p>bowtie2 建立索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bowtie2-build --threads 25 $fa bowtie2Index/Ha</span><br></pre></td></tr></table></figure><p>bowtie2 比对</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ref=~/project/brain/ref/bowtie2-index/dmel-r6.12</span><br><span class="line">cores=12</span><br><span class="line">cat clean_list|while read id; do</span><br><span class="line">arr=($id)</span><br><span class="line">fq1=$&#123;arr[0]&#125;</span><br><span class="line">fq2=$&#123;arr[1]&#125;</span><br><span class="line">prefix=`basename $fq1 _clean_R1.fq.gz`</span><br><span class="line"></span><br><span class="line">echo $&#123;prefix&#125;--------------------------------------------------------------------------------</span><br><span class="line">bowtie2 -p $&#123;cores&#125; \</span><br><span class="line">-x $&#123;ref&#125; \</span><br><span class="line">-1 $&#123;fq1&#125; \</span><br><span class="line">-2 $&#123;fq2&#125; \</span><br><span class="line">-S $&#123;prefix&#125;.sam </span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$bowtie2-build -h<br>Bowtie 2 version 2.3.5.1 by Ben Langmead (<a href="mailto:&#108;&#97;&#110;&#x67;&#x6d;&#x65;&#x61;&#64;&#x63;&#x73;&#x2e;&#x6a;&#104;&#x75;&#46;&#101;&#x64;&#117;">&#108;&#97;&#110;&#x67;&#x6d;&#x65;&#x61;&#64;&#x63;&#x73;&#x2e;&#x6a;&#104;&#x75;&#46;&#101;&#x64;&#117;</a>, <a href="http://www.cs.jhu.edu/~langmea">www.cs.jhu.edu/~langmea</a>)<br>Usage: bowtie2-build [options]* <reference_in> <bt2_index_base><br>    reference_in            comma-separated list of files with ref sequences<br>    bt2_index_base          write bt2 data to files with this dir&#x2F;basename<br>*** Bowtie 2 indexes work only with v2 (not v1).  Likewise for v1 indexes. ***<br>Options:<br>    -f                      reference files are Fasta (default)<br>    -c                      reference sequences given on cmd line (as<br>                            <reference_in>)<br>    –large-index           force generated index to be ‘large’, even if ref<br>                            has fewer than 4 billion nucleotides<br>    –debug                 use the debug binary; slower, assertions enabled<br>    –sanitized             use sanitized binary; slower, uses ASan and&#x2F;or UBSan<br>    –verbose               log the issued command<br>    -a&#x2F;–noauto             disable automatic -p&#x2F;–bmax&#x2F;–dcv memory-fitting<br>    -p&#x2F;–packed             use packed strings internally; slower, less memory<br>    –bmax <int>            max bucket sz for blockwise suffix-array builder<br>    –bmaxdivn <int>        max bucket sz as divisor of ref len (default: 4)<br>    –dcv <int>             diff-cover period for blockwise (default: 1024)<br>    –nodc                  disable diff-cover (algorithm becomes quadratic)<br>    -r&#x2F;–noref              don’t build .3&#x2F;.4 index files<br>    -3&#x2F;–justref            just build .3&#x2F;.4 index files<br>    -o&#x2F;–offrate <int>      SA is sampled every 2^<int> BWT chars (default: 5)<br>    -t&#x2F;–ftabchars <int>    # of chars consumed in initial lookup (default: 10)<br>    –threads <int>         # of threads<br>    –seed <int>            seed for random number generator<br>    -q&#x2F;–quiet              verbose output (for debugging)<br>    -h&#x2F;–help               print detailed description of tool and its options<br>    –usage                 print this usage message<br>    –version               print version information and quit</p><p>$bowtie2 -h<br>Bowtie 2 version 2.3.5.1 by Ben Langmead (<a href="mailto:&#108;&#97;&#110;&#103;&#x6d;&#x65;&#97;&#64;&#99;&#115;&#46;&#106;&#104;&#117;&#46;&#101;&#100;&#117;">&#108;&#97;&#110;&#103;&#x6d;&#x65;&#97;&#64;&#99;&#115;&#46;&#106;&#104;&#117;&#46;&#101;&#100;&#117;</a>, <a href="http://www.cs.jhu.edu/~langmea">www.cs.jhu.edu/~langmea</a>)<br>Usage:<br>  bowtie2 [options]* -x <bt2-idx> {-1 <m1> -2 <m2> | -U <r> | –interleaved <i> | -b <bam>} [-S <sam>]</p><p>  <bt2-idx>  Index filename prefix (minus trailing .X.bt2).<br>             NOTE: Bowtie 1 and Bowtie 2 indexes are not compatible.<br>  <m1>       Files with #1 mates, paired with files in <m2>.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <m2>       Files with #2 mates, paired with files in <m1>.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <r>        Files with unpaired reads.<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <i>        Files with interleaved paired-end FASTQ&#x2F;FASTA reads<br>             Could be gzip’ed (extension: .gz) or bzip2’ed (extension: .bz2).<br>  <bam>      Files are unaligned BAM sorted by read name.<br>  <sam>      File for SAM output (default: stdout)</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;bowtie和bowtie2的区别&lt;br&gt;这两个软件都适合DNA的比对，bowtie开发的比较早，适合短reads（50bp）的比对，bowtie2适合长一点的reads（150bp）的比对，现在的数据基本上都适合用bowtie2&lt;/p&gt;
&lt;p&gt;bowtie2 如何选择 u</summary>
      
    
    
    
    <category term="biosoft" scheme="https://sqwwww.github.io/categories/biosoft/"/>
    
    
  </entry>
  
</feed>
